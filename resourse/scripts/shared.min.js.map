{"version":3,"sources":["main.js","header_banner.js","footer.js","nav_catalog.js","mobile_menu.js","modal_window.js","modal_window_feedback_error.js","modal_window_feedback_manager.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACltHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shared.min.js","sourcesContent":["window.shared = {};\n\nwindow.shared.throttle = (callback, wait, immediate = false) => {\n  let timeout = null;\n  let initialCall = true;\n\n  return (...args) => {\n    const callNow = immediate && initialCall;\n\n    const run = () => {\n      callback(args);\n      timeout = null;\n    };\n\n    if (callNow) {\n      initialCall = false;\n      run();\n    }\n\n    if (!timeout) timeout = setTimeout(run, wait);\n  };\n};\n","const headerBanner = document.getElementById('headerBanner');\n\nif (headerBanner) {\n  const onResizeHeaderBanner = () => {\n    const { height } = headerBanner.getBoundingClientRect();\n    document.body.style.setProperty('--header-banner-top', `${height}px`);\n  };\n  const onResizeHeaderBannerThrottle = window.shared.throttle(onResizeHeaderBanner, 1000, true);\n  onResizeHeaderBannerThrottle();\n\n  window.addEventListener('resize', onResizeHeaderBannerThrottle);\n}\n","const footerWindowModalFeedbackError = document.getElementById('footerWindowModalFeedbackError');\nfooterWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst footerWindowModalFeedbackManager = document.getElementById('footerWindowModalFeedbackManager');\nfooterWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n\nconst initBtnScrollOnTop = () => {\n  const btnScrollToTopEl = document.getElementById('btnScrollToTop');\n  const onClickbtnScrollToTop = () => window.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\n  btnScrollToTopEl.addEventListener('click', onClickbtnScrollToTop);\n\n  const onHide = entries => {\n    entries.forEach(({ isIntersecting }) => {\n      isIntersecting\n        ? btnScrollToTopEl.classList.add('btn-scroll-to-top--hide')\n        : btnScrollToTopEl.classList.remove('btn-scroll-to-top--hide');\n    });\n  };\n\n  (new IntersectionObserver(onHide))\n    .observe(document.getElementById('interseptorHideBtnScrollToTop'));\n\n  const onDock = entries => {\n    entries.forEach(({ isIntersecting }) => {\n      isIntersecting\n        ? btnScrollToTopEl.classList.remove('btn-scroll-to-top--float')\n        : btnScrollToTopEl.classList.add('btn-scroll-to-top--float');\n    });\n  };\n\n  (new IntersectionObserver(onDock))\n    .observe(document.getElementById('interseptorDockBtnScrollToTop'));\n};\n\ninitBtnScrollOnTop();\n","const navCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\n\nconst deactivateCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.remove('nav-catalog__list--is-visible');\n};\n\n$('.nav-catalog__list').menuAim({\n  activate: navCategoriesListActivate,\n  deactivate: deactivateCategoriesListActivate,\n  exitMenu: () => true\n});\n\nconst navCategoriesBtnNavList = document.querySelectorAll('.nav-catalog__btn-nav');\nconst onClickNavCategoriesBtnNav = evt => {\n  if (window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = evt.target.parentElement.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\nnavCategoriesBtnNavList.forEach(el => el.addEventListener('click', onClickNavCategoriesBtnNav));\n","const header = document.getElementById('header');\nconst mobileMenu = document.getElementById('mobileMenu');\nconst btnMobileMenu = document.getElementById('btnMobileMenu');\n\nconst setMobileMenuTop = () => {\n  const { top, height } = header.getBoundingClientRect();\n  mobileMenu.style.setProperty('--mobile-menu-top', `${height + top}px`);\n};\n\nconst onClickBtnMobileMenu = () => {\n  if (document.body.classList.contains('body--mobile-menu-open')) {\n    document.body.classList.remove('body--mobile-menu-catalog-open');\n    const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n    navCategoriesList.forEach(el => el.classList.remove('nav-catalog__list--is-visible'));\n  } else {\n    setMobileMenuTop();\n  }\n\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnMobileMenu.addEventListener('click', onClickBtnMobileMenu);\n\n// ------------------------------------------------------------------\n\nconst btnHeaderMenuEl = document.getElementById('btnHeaderMenu');\n\nconst onClickBtnHeaderMenu = evt => {\n  if (evt.target !== evt.currentTarget) return;\n  if (!document.body.classList.contains('body--mobile-menu-open')) setMobileMenuTop();\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnHeaderMenuEl.addEventListener('click', onClickBtnHeaderMenu);\nmobileMenu.addEventListener('click', onClickBtnHeaderMenu);\n\n// ------------------------------------------------------------------\n\nconst btnMobileMenuCategories = document.getElementById('btnMobileMenuCategories');\nconst btnMobileMenuBack = document.getElementById('btnMobileMenuBack');\n\nconst onClickBtnMobileMenuCategories = () => {\n  document.body.classList.add('body--mobile-menu-catalog-open');\n};\n\nbtnMobileMenuCategories.addEventListener('click', onClickBtnMobileMenuCategories);\n\nconst onClickBtnMobileMenuBack = () => {\n  const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n  if (!navCategoriesList.length) {\n    document.body.classList.remove('body--mobile-menu-catalog-open');\n    return;\n  }\n  const navCategoriesListLast = navCategoriesList[navCategoriesList.length - 1];\n  navCategoriesListLast.classList.remove('nav-catalog__list--is-visible');\n};\n\nbtnMobileMenuBack.addEventListener('click', onClickBtnMobileMenuBack);\n\n// ------------------------------------------------------------------\n\nconst mmWindowModalFeedbackError = document.getElementById('mmWindowModalFeedbackError');\nmmWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst mmWindowModalFeedbackManager = document.getElementById('mmWindowModalFeedbackManager');\nmmWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n","window.ModalWindow = class {\n  constructor(titleText, bodyInner) {\n    this.createModal(titleText, bodyInner);\n    document.body.classList.add('body--window-modal-open');\n\n    setTimeout(() => {\n      this.modalWindow.classList.add('modal-window--open');\n      this.modalWindow.focus();\n    },\n    50);\n  }\n\n  static createFormInput({\n    title, name, placeholder, required, type, element = 'input'\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputNameInput = document.createElement(element);\n    inputNameInput.classList.add(`form-input__${element}`);\n    inputNameInput.name = name;\n    inputNameInput.placeholder = placeholder;\n    if (required) inputNameInput.required = true;\n    if (type) inputNameInput.type = type;\n    formInput.appendChild(inputNameInput);\n\n    return formInput;\n  }\n\n  static createFormBtn() {\n    const formBtn = document.createElement('button');\n    formBtn.classList.add('form-btn');\n    formBtn.textContent = 'Надіслати повідомлення';\n    return formBtn;\n  }\n\n  static createFormHidden(name, value) {\n    const formHidden = document.createElement('input');\n    formHidden.type = 'hidden';\n    formHidden.value = value;\n    formHidden.name = name;\n    return formHidden;\n  }\n\n  static createFormNote(text) {\n    const formNote = document.createElement('div');\n    formNote.classList.add('form-note');\n    formNote.innerHTML = text;\n    return formNote;\n  }\n\n  createModal(titleText, bodyInner) {\n    const main = document.createElement('div');\n    main.classList.add('modal-window');\n    main.tabIndex = 2;\n    main.addEventListener('click', this.onClickClose.bind(this));\n    main.addEventListener('presskey', ({ key }) => console.log(key) || key === 'Escape' && this.onClickClose());\n\n    const content = document.createElement('div');\n    content.classList.add('modal-window__content');\n    main.appendChild(content);\n\n    const header = document.createElement('div');\n    header.classList.add('modal-window__header');\n    content.appendChild(header);\n\n    const btnClose = document.createElement('button');\n    btnClose.classList.add('modal-window__btn-close');\n    btnClose.title = 'Закрити (Esc)';\n    btnClose.addEventListener('click', this.onClickClose.bind(this));\n    header.appendChild(btnClose);\n\n    const title = document.createElement('div');\n    title.classList.add('modal-window__title');\n    title.textContent = titleText;\n    header.appendChild(title);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const btnCloseImg = document.createElementNS(xmlns, 'svg');\n    btnCloseImg.classList.add('modal-window__btn-close-img');\n    btnClose.appendChild(btnCloseImg);\n\n    const btnCloseImgUse = document.createElementNS(xmlns, 'use');\n    btnCloseImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-close');\n    btnCloseImg.appendChild(btnCloseImgUse);\n\n    const body = document.createElement('div');\n    body.classList.add('modal-window__body');\n    body.appendChild(bodyInner);\n    content.appendChild(body);\n\n    document.body.appendChild(main);\n\n    this.modalWindow = main;\n    this.body = body;\n  }\n\n  onClickClose(evt) {\n    if (evt.target !== evt.currentTarget) return;\n    document.body.classList.remove('body--window-modal-open');\n    this.modalWindow.classList.remove('modal-window--open');\n    setTimeout(() => this.modalWindow.remove(), 500);\n  }\n};\n","window.modalWindowFeedbackError = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'error');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Суть проблеми', name: 'description', placeholder: 'Опис проблеми...', required: true, element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn();\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'error';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Повідомлення про помилку', form);\n};\n","window.modalWindowFeedbackManager = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formNote = window.ModalWindow.createFormNote(`\n    У вас виникли запитання, зауваження, пропозиції?<br>\n    Заповніть, будь ласка, наступну форму.\n    Ця інформація потрапить до керівництва компанії (директора та керівників підрозділів).\n  `);\n  form.appendChild(formNote);\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'manager');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Коментар', name: 'description', placeholder: 'Коментар', element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn();\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'success';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Написати директору', form);\n};\n\n// Відкривати форму по посиланню\nif (window.location.hash === '#manager') window.modalWindowFeedbackManager();\n"]}