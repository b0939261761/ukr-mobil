{"version":3,"sources":["main.js","header_banner.js","header_bottom.js","footer.js","footer_btn_scroll_to_top.js","nav_catalog.js","mobile_menu.js","modal_window.js","modal_window_feedback_error.js","modal_window_feedback_manager.js","modal_window_login.js","modal_window_recovery.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxrRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACltOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"shared.min.js","sourcesContent":["window.shared = {};\n\nwindow.shared.throttle = (callback, wait, immediate = false) => {\n  let timeout = null;\n  let initialCall = true;\n\n  return (...args) => {\n    const callNow = immediate && initialCall;\n\n    const run = () => {\n      callback(args);\n      timeout = null;\n    };\n\n    if (callNow) {\n      initialCall = false;\n      run();\n    }\n\n    if (!timeout) timeout = setTimeout(run, wait);\n  };\n};\n\nwindow.shared.escapeRegExp = str => str.replace(/[\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n","const headerBanner = document.getElementById('headerBanner');\n\nif (headerBanner) {\n  const onResizeHeaderBanner = () => {\n    const { height } = headerBanner.getBoundingClientRect();\n    document.body.style.setProperty('--header-banner-top', `${height}px`);\n  };\n  const onResizeHeaderBannerThrottle = window.shared.throttle(onResizeHeaderBanner, 1000, true);\n  onResizeHeaderBannerThrottle();\n\n  window.addEventListener('resize', onResizeHeaderBannerThrottle);\n}\n","const headerLogin = document.getElementById('headerLogin');\nif (headerLogin) headerLogin.addEventListener('click', () => window.modalWindowLogin());\n","const footerWindowModalFeedbackError = document.getElementById('footerWindowModalFeedbackError');\nfooterWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst footerWindowModalFeedbackManager = document.getElementById('footerWindowModalFeedbackManager');\nfooterWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n","const btnScrollToTopEl = document.getElementById('btnScrollToTop');\nconst onClickbtnScrollToTop = () => window.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\nbtnScrollToTopEl.addEventListener('click', onClickbtnScrollToTop);\n\nconst onHide = entries => {\n  entries.forEach(({ isIntersecting }) => {\n    isIntersecting\n      ? btnScrollToTopEl.classList.add('footer-btn-scroll-to-top--hide')\n      : btnScrollToTopEl.classList.remove('footer-btn-scroll-to-top--hide');\n  });\n};\n\nconst interseptorHideFooterBtnScrollToTop = document.createElement('div');\ninterseptorHideFooterBtnScrollToTop.classList.add('interseptor-hide-footer-btn-scroll-to-top');\ndocument.body.appendChild(interseptorHideFooterBtnScrollToTop);\n\n(new IntersectionObserver(onHide)).observe(interseptorHideFooterBtnScrollToTop);\n\nconst onDock = entries => {\n  entries.forEach(({ isIntersecting }) => {\n    isIntersecting\n      ? btnScrollToTopEl.classList.remove('footer-btn-scroll-to-top--float')\n      : btnScrollToTopEl.classList.add('footer-btn-scroll-to-top--float');\n  });\n};\n\n(new IntersectionObserver(onDock))\n  .observe(document.getElementById('interseptorDockFooterBtnScrollToTop'));\n","const navCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\n\nconst deactivateCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.remove('nav-catalog__list--is-visible');\n};\n\n$('.nav-catalog__list').menuAim({\n  activate: navCategoriesListActivate,\n  deactivate: deactivateCategoriesListActivate,\n  exitMenu: () => true\n});\n\nconst navCategoriesBtnNavList = document.querySelectorAll('.nav-catalog__link--has-children');\nconst onClickNavCategoriesBtnNav = evt => {\n  if (window.matchMedia('(min-width: 1080px)').matches) return;\n  evt.preventDefault();\n  const navCategoriesList = evt.target.parentElement.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\nnavCategoriesBtnNavList.forEach(el => el.addEventListener('click', onClickNavCategoriesBtnNav));\n","const header = document.getElementById('header');\nconst mobileMenu = document.getElementById('mobileMenu');\nconst btnMobileMenu = document.getElementById('btnMobileMenu');\n\nwindow.setMobileMenuTop = () => {\n  const { top, height } = header.getBoundingClientRect();\n  mobileMenu.style.setProperty('--mobile-menu-top', `${height + top}px`);\n};\n\nconst onClickBtnMobileMenu = () => {\n  if (document.body.classList.contains('body--mobile-menu-open')) {\n    document.body.classList.remove('body--mobile-menu-catalog-open');\n    const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n    navCategoriesList.forEach(el => el.classList.remove('nav-catalog__list--is-visible'));\n  } else {\n    window.setMobileMenuTop();\n  }\n\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnMobileMenu.addEventListener('click', onClickBtnMobileMenu);\n\n// ------------------------------------------------------------------\n\nconst btnHeaderMenuEl = document.getElementById('btnHeaderMenu');\n\nconst onClickBtnHeaderMenu = evt => {\n  if (evt.target !== evt.currentTarget) return;\n  if (!document.body.classList.contains('body--mobile-menu-open')) window.setMobileMenuTop();\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnHeaderMenuEl.addEventListener('click', onClickBtnHeaderMenu);\nmobileMenu.addEventListener('click', onClickBtnHeaderMenu);\n\n// ------------------------------------------------------------------\n\nconst btnMobileMenuCategories = document.getElementById('btnMobileMenuCategories');\n\nconst onClickBtnMobileMenuCategories = () => {\n  if (document.body.classList.contains('body--mobile-menu-catalog-open')) {\n    const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n    if (!navCategoriesList.length) {\n      document.body.classList.remove('body--mobile-menu-catalog-open');\n      return;\n    }\n    const navCategoriesListLast = navCategoriesList[navCategoriesList.length - 1];\n    navCategoriesListLast.classList.remove('nav-catalog__list--is-visible');\n  } else {\n    document.body.classList.add('body--mobile-menu-catalog-open');\n  }\n};\n\nbtnMobileMenuCategories.addEventListener('click', onClickBtnMobileMenuCategories);\n\n// ------------------------------------------------------------------\n\nconst mmWindowModalFeedbackError = document.getElementById('mmWindowModalFeedbackError');\nmmWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst mmWindowModalFeedbackManager = document.getElementById('mmWindowModalFeedbackManager');\nmmWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n\n// ------------------------------------------------------------------\n\nconst wrapperMobileMenuContacts = document.getElementById('wrapperMobileMenuContacts');\n\nconst setMobileMenuContactsHeight = height => wrapperMobileMenuContacts.style.setProperty('--height', height);\n\nconst onResizeMobileMenuContacts = () => console.log(wrapperMobileMenuContacts.firstElementChild.scrollHeight) || setMobileMenuContactsHeight(`${wrapperMobileMenuContacts.firstElementChild.scrollHeight}px`);\nconst onResizeMobileMenuContactsThrottle = window.shared.throttle(onResizeMobileMenuContacts, 500);\n\nconst onClickMobileMenuBtnContact = () => {\n  if (wrapperMobileMenuContacts.style.getPropertyValue('--height')) {\n    setMobileMenuContactsHeight(null);\n    window.removeEventListener('resize', onResizeMobileMenuContactsThrottle);\n  } else {\n    onResizeMobileMenuContacts();\n    window.addEventListener('resize', onResizeMobileMenuContactsThrottle);\n  }\n};\n\nconst mobileMenuBtnContact = document.getElementById('mobileMenuBtnContact');\nmobileMenuBtnContact.addEventListener('click', onClickMobileMenuBtnContact);\n\n// ------------------------------------------------------------------\n\nconst mobileMenuLogin = document.getElementById('mobileMenuLogin');\nif (mobileMenuLogin) mobileMenuLogin.addEventListener('click', () => window.modalWindowLogin());\n","window.ModalWindow = class {\n  constructor(titleText, bodyInner) {\n    this.createModal(titleText, bodyInner);\n    document.body.classList.add('body--window-modal-open');\n    this.modalWindow.classList.add('modal-window--open');\n    this.modalWindow.focus();\n  }\n\n  static createResponse(text, type) {\n    const response = document.createElement('div');\n    response.classList.add('modal-window__response', `modal-window__response--${type}`);\n    response.innerHTML = text;\n    return response;\n  }\n\n  static createFormElement() {\n    const form = document.createElement('form');\n    form.classList.add('modal-window__form');\n    return form;\n  }\n\n  // static createFormCheckBox({\n  //   title, name, required\n  // }) {\n  //   const formInput = document.createElement('label');\n  //   formInput.classList.add('form-ckeckbox');\n\n  //   const inputNameInput = document.createElement('input');\n  //   inputNameInput.classList.add('form-ckeckbox__input');\n  //   inputNameInput.type = 'checkbox';\n  //   inputNameInput.name = name;\n  //   if (required) inputNameInput.required = true;\n  //   formInput.appendChild(inputNameInput);\n\n  //   const xmlns = 'http://www.w3.org/2000/svg';\n  //   const xlink = 'http://www.w3.org/1999/xlink';\n  //   const checkImg = document.createElementNS(xmlns, 'svg');\n  //   checkImg.classList.add('form-ckeckbox__check-img');\n  //   formInput.appendChild(checkImg);\n\n  //   const checkImgUse = document.createElementNS(xmlns, 'use');\n  //   checkImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-check');\n  //   checkImg.appendChild(checkImgUse);\n\n  //   const formInputTitle = document.createElement('span');\n  //   formInputTitle.classList.add('form-input__title1');\n  //   formInput.appendChild(formInputTitle);\n  //   formInputTitle.appendChild(document.createTextNode(title));\n  //   return formInput;\n  // }\n\n  static createFormInput({\n    title, name, placeholder, required, type, element = 'input', maxLength\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputNameInput = document.createElement(element);\n    inputNameInput.classList.add(`form-input__${element}`);\n    inputNameInput.name = name;\n    if (placeholder) inputNameInput.placeholder = placeholder;\n    if (required) inputNameInput.required = true;\n    if (maxLength) inputNameInput.maxLength = maxLength;\n    if (type) inputNameInput.type = type;\n    formInput.appendChild(inputNameInput);\n\n    return formInput;\n  }\n\n  static createFormInputPhone({\n    title, name, required\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputNameInput = document.createElement('input');\n    inputNameInput.classList.add('form-input__input');\n    inputNameInput.name = name;\n    inputNameInput.pattern = '\\\\+38\\\\(0\\\\d{2}\\\\)\\\\d{3}-\\\\d{2}-\\\\d{2}';\n    if (required) inputNameInput.required = true;\n    formInput.appendChild(inputNameInput);\n\n    const mask = IMask(inputNameInput, { mask: '+38(\\\\000)000-00-00', lazy: false });\n    const invalidText = 'Неправильний номер телефону. Формат 38(0xx)xxx-xx-xx';\n\n    inputNameInput.addEventListener('invalid', () => inputNameInput.setCustomValidity(invalidText));\n    inputNameInput.addEventListener('input', () => inputNameInput.setCustomValidity(''));\n\n    return { element: formInput, mask };\n  }\n\n  static createFormInputPassword({\n    title, name, required, confirmElement, isConfirm = false, minLength, maxLength\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputWrapperInput = document.createElement('div');\n    inputWrapperInput.classList.add('form-input__wrapper-input-password');\n    formInput.appendChild(inputWrapperInput);\n\n    const inputNameInput = document.createElement('input');\n    inputNameInput.classList.add('form-input__input', 'form-input__input--password');\n    inputNameInput.name = name;\n    if (required) inputNameInput.required = true;\n    if (minLength) inputNameInput.minLength = minLength;\n    if (maxLength) inputNameInput.maxLength = maxLength;\n    inputNameInput.type = 'password';\n    inputWrapperInput.appendChild(inputNameInput);\n\n    const confirmInput = confirmElement && confirmElement.querySelector('.form-input__input');\n\n    const onInput = ({ target }) => {\n      if (confirmElement) {\n        confirmElement.pattern = window.shared.escapeRegExp(target.value);\n      }\n      inputNameInput.setCustomValidity('');\n    };\n\n    const onInvalid = () => {\n      if (isConfirm) inputNameInput.setCustomValidity('Паролі неспівпадають');\n    };\n\n    inputNameInput.addEventListener('input', onInput);\n    inputNameInput.addEventListener('invalid', onInvalid);\n\n    const btnVisible = document.createElement('button');\n    btnVisible.classList.add('form-input__btn-visible-password');\n    btnVisible.type = 'button';\n    inputWrapperInput.appendChild(btnVisible);\n\n    const onClickBtnVisible = () => {\n      if (btnVisible.classList.contains('form-input__btn-visible-password--active')) {\n        btnVisible.classList.remove('form-input__btn-visible-password--active');\n        inputNameInput.type = 'password';\n      } else {\n        btnVisible.classList.add('form-input__btn-visible-password--active');\n        inputNameInput.type = 'text';\n      }\n    };\n    btnVisible.addEventListener('click', onClickBtnVisible);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const btnVisiblePasswordImg = document.createElementNS(xmlns, 'svg');\n    btnVisiblePasswordImg.classList.add('form-input__btn-visible-password-img');\n    btnVisible.appendChild(btnVisiblePasswordImg);\n\n    const btnVisiblePasswordImgUse = document.createElementNS(xmlns, 'use');\n    btnVisiblePasswordImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-eye');\n    btnVisiblePasswordImg.appendChild(btnVisiblePasswordImgUse);\n\n    const line = document.createElement('span');\n    line.classList.add('form-input__btn-visible-password-line');\n    btnVisible.appendChild(line);\n\n    return formInput;\n  }\n\n  static createFormBtn(title) {\n    const formBtn = document.createElement('button');\n    formBtn.classList.add('form-btn');\n    formBtn.textContent = title;\n    return formBtn;\n  }\n\n  static createFormHidden(name, value) {\n    const formHidden = document.createElement('input');\n    formHidden.type = 'hidden';\n    formHidden.value = value;\n    formHidden.name = name;\n    return formHidden;\n  }\n\n  static createFormNote(text) {\n    const formNote = document.createElement('div');\n    formNote.classList.add('form-note');\n    formNote.innerHTML = text;\n    return formNote;\n  }\n\n  createModal(titleText, bodyInner) {\n    const main = document.createElement('div');\n    main.classList.add('modal-window');\n    main.tabIndex = -1;\n    main.addEventListener('click', this.onClickClose.bind(this));\n    main.addEventListener('keydown', ({ key }) => key === 'Escape' && this.close());\n\n    const content = document.createElement('div');\n    content.classList.add('modal-window__content');\n    main.appendChild(content);\n\n    const header = document.createElement('div');\n    header.classList.add('modal-window__header');\n    content.appendChild(header);\n\n    const btnClose = document.createElement('button');\n    btnClose.classList.add('modal-window__btn-close');\n    btnClose.title = 'Закрити (Esc)';\n    btnClose.addEventListener('click', this.onClickClose.bind(this));\n    header.appendChild(btnClose);\n\n    const title = document.createElement('div');\n    title.classList.add('modal-window__title');\n    title.textContent = titleText;\n    header.appendChild(title);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const btnCloseImg = document.createElementNS(xmlns, 'svg');\n    btnCloseImg.classList.add('modal-window__btn-close-img');\n    btnClose.appendChild(btnCloseImg);\n\n    const btnCloseImgUse = document.createElementNS(xmlns, 'use');\n    btnCloseImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-close');\n    btnCloseImg.appendChild(btnCloseImgUse);\n\n    const body = document.createElement('div');\n    body.classList.add('modal-window__body');\n    body.appendChild(bodyInner);\n    content.appendChild(body);\n\n    document.body.appendChild(main);\n\n    this.modalWindow = main;\n    this.body = body;\n  }\n\n  onClickClose(evt) {\n    if (evt.target === evt.currentTarget) this.close();\n  }\n\n  close() {\n    document.body.classList.remove('body--window-modal-open');\n    this.modalWindow.classList.remove('modal-window--open');\n    setTimeout(() => this.modalWindow.remove(), 500);\n  }\n};\n","window.modalWindowFeedbackError = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'error');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Суть проблеми', name: 'description', placeholder: 'Опис проблеми...', required: true, element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати повідомлення');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'error';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Повідомлення про помилку', form);\n};\n","window.modalWindowFeedbackManager = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formNote = window.ModalWindow.createFormNote(`\n    У вас виникли запитання, зауваження, пропозиції?<br>\n    Заповніть, будь ласка, наступну форму.\n    Ця інформація потрапить до керівництва компанії (директора та керівників підрозділів).\n  `);\n  form.appendChild(formNote);\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'manager');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Коментар', name: 'description', placeholder: 'Коментар', element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати повідомлення');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'error';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Написати директору', form);\n};\n\n// Відкривати форму по посиланню\nif (window.location.hash === '#manager') window.modalWindowFeedbackManager();\n","window.modalWindowLogin = () => {\n  let modalWindow;\n\n  const createFormRegister = () => {\n    const form = window.ModalWindow.createFormElement();\n\n    const formInputFirstName = window.ModalWindow.createFormInput({\n      title: 'Ім\\'я', name: 'firstName', placeholder: 'Iван', required: true, maxLength: 32\n    });\n    form.appendChild(formInputFirstName);\n\n    const formInputLastName = window.ModalWindow.createFormInput({\n      title: 'Прізвище', name: 'lastName', placeholder: 'Iванов', required: true, maxLength: 32\n    });\n    form.appendChild(formInputLastName);\n\n    const phone = window.ModalWindow.createFormInputPhone({ title: 'Телефон', name: 'phone', required: true });\n    const formInputPhone = phone.element;\n    form.appendChild(formInputPhone);\n\n    const formInputEmail = window.ModalWindow.createFormInput({\n      title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true, maxLength: 96\n    });\n    form.appendChild(formInputEmail);\n\n    const formInputPasswordConfirm = window.ModalWindow.createFormInputPassword({\n      title: 'Повторіть пароль', name: 'confirm', isConfirm: true, required: true\n    });\n\n    const formInputPassword = window.ModalWindow.createFormInputPassword({\n      title: 'Пароль',\n      name: 'password',\n      required: true,\n      confirmElement: formInputPasswordConfirm.querySelector('.form-input__input'),\n      minLength: 4,\n      maxLength: 20\n    });\n\n    form.appendChild(formInputPassword);\n    form.appendChild(formInputPasswordConfirm);\n\n    const recaptchaScript = document.createElement('script');\n    recaptchaScript.src = '//www.google.com/recaptcha/api.js?hl=ru';\n    form.appendChild(recaptchaScript);\n\n    const recaptcha = document.createElement('div');\n    recaptcha.classList.add('g-recaptcha', 'modal-window-login__recaptcha');\n    recaptcha.dataset.sitekey = '6Le97jQbAAAAAPRfGkHDjfUe6vPdmKlaNnmsTtCI';\n    form.appendChild(recaptcha);\n\n    const termToAgree = document.createElement('div');\n    termToAgree.classList.add('modal-window-login__term-to-agree');\n    termToAgree.appendChild(document.createTextNode('Реєструючись, ви погоджуєтеся з '));\n    form.appendChild(termToAgree);\n\n    const linkTermToAgree = document.createElement('a');\n    linkTermToAgree.classList.add('modal-window-login__term-to-link');\n    linkTermToAgree.textContent = 'угодою користувача';\n    linkTermToAgree.href = '/agree_to_terms';\n    linkTermToAgree.target = '_blank';\n    termToAgree.appendChild(linkTermToAgree);\n\n    const formBtn = window.ModalWindow.createFormBtn('Реєстрація');\n    form.appendChild(formBtn);\n\n    const onSubmit = async evt => {\n      evt.preventDefault();\n\n      formBtn.disabled = true;\n      recaptcha.classList.remove('modal-window-login__recaptcha--error');\n\n      const url = '/index.php?route=api/register';\n      const body = JSON.stringify({\n        firstName: form.firstName.value,\n        lastName: form.lastName.value,\n        email: form.email.value,\n        phone: phone.mask.unmaskedValue,\n        password: form.password.value,\n        captcha: window.grecaptcha.getResponse()\n      });\n\n      let errorText;\n      try {\n        const response = await fetch(url, { method: 'POST', body });\n        const responseText = await response.text();\n        if (response.ok) {\n          window.location = responseText;\n          return;\n        }\n        if (response.status === 400 && responseText === 'INVALID') {\n          errorText = 'Помилка валідації';\n        } else if (response.status === 400 && responseText === 'CAPTCHA') {\n          errorText = 'Помилка капчі';\n          window.grecaptcha.reset();\n          recaptcha.classList.add('modal-window-login__recaptcha--error');\n        } else if (response.status === 400 && responseText === 'USER_EXISTS') {\n          errorText = 'Данний email вже зареєстрований';\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      } catch (err) {\n        errorText = `Помилка відправлення: ${err.message}`;\n      }\n\n      const modalWindowResponse = form.querySelector('.modal-window__response');\n      if (modalWindowResponse) modalWindowResponse.remove();\n      const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n      form.appendChild(responseElement);\n      formBtn.disabled = false;\n    };\n\n    form.addEventListener('submit', onSubmit);\n    return form;\n  };\n\n  const createFormLogin = () => {\n    const form = window.ModalWindow.createFormElement();\n\n    const formInputEmail = window.ModalWindow.createFormInput({\n      title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true\n    });\n    form.appendChild(formInputEmail);\n\n    const formInputPassword = window.ModalWindow.createFormInputPassword({\n      title: 'Пароль', name: 'password', required: true\n    });\n    form.appendChild(formInputPassword);\n\n    const wrapperBtnForgotten = document.createElement('div');\n    wrapperBtnForgotten.classList.add('modal-window-login__wrapper-btn-forgotten');\n    form.appendChild(wrapperBtnForgotten);\n\n    const btnForgotten = document.createElement('button');\n    btnForgotten.type = 'button';\n    btnForgotten.classList.add('modal-window-login__btn-forgotten');\n    btnForgotten.textContent = 'Забули пароль? Відновити.';\n    wrapperBtnForgotten.appendChild(btnForgotten);\n\n    const onClickRecovery = () => {\n      modalWindow.close();\n      window.modalWindowRecovery();\n    };\n    btnForgotten.addEventListener('click', onClickRecovery);\n\n    const formBtn = window.ModalWindow.createFormBtn('Авторизуватися');\n    form.appendChild(formBtn);\n\n    const onSubmit = async evt => {\n      evt.preventDefault();\n      formBtn.disabled = true;\n\n      const url = '/index.php?route=api/login';\n      const body = JSON.stringify({\n        email: form.email.value,\n        password: form.password.value\n      });\n\n      let errorText;\n      try {\n        const response = await fetch(url, { method: 'POST', body });\n        if (response.ok) return window.location.reload();\n\n        const responseText = await response.text();\n        if (response.status === 400 && responseText === 'ATTEMPTS') {\n          errorText = 'Ви перевищили максимальну кількість спроб авторизації.'\n            + ' Будь ласка, спробуйте авторизації на сайті через 1 годину';\n        } else if (response.status === 401) {\n          errorText = 'Неправильний email або пароль';\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      } catch (err) {\n        errorText = `Помилка відправлення: ${err.message}`;\n      }\n\n      const modalWindowResponse = form.querySelector('.modal-window__response');\n      if (modalWindowResponse) modalWindowResponse.remove();\n      const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n      form.appendChild(responseElement);\n      formBtn.disabled = false;\n    };\n\n    form.addEventListener('submit', onSubmit);\n    return form;\n  };\n\n  const content = document.createElement('div');\n\n  const tabs = document.createElement('div');\n  tabs.classList.add('modal-window-login__tabs');\n  content.appendChild(tabs);\n\n  const btnRegister = document.createElement('button');\n  btnRegister.type = 'button';\n  btnRegister.classList.add('modal-window-login__tab');\n  btnRegister.textContent = 'Реєстрація';\n  tabs.appendChild(btnRegister);\n\n  const btnLogin = document.createElement('button');\n  btnLogin.type = 'button';\n  btnLogin.classList.add('modal-window-login__tab', 'modal-window-login__tab--active');\n  btnLogin.textContent = 'Авторизація';\n  tabs.appendChild(btnLogin);\n\n  let formRegister;\n  const formLogin = createFormLogin();\n\n  const onClickTab = ({ target }) => {\n    if (target.classList.contains('modal-window-login__tab--active')) return;\n\n    btnRegister.classList.toggle('modal-window-login__tab--active');\n    btnLogin.classList.toggle('modal-window-login__tab--active');\n\n    if (!formRegister) {\n      formRegister = createFormRegister();\n      content.appendChild(formRegister);\n    } else {\n      formRegister.classList.toggle('modal-window__form--hide');\n    }\n\n    formLogin.classList.toggle('modal-window__form--hide');\n  };\n\n  btnRegister.addEventListener('click', onClickTab);\n  btnLogin.addEventListener('click', onClickTab);\n\n  content.appendChild(formLogin);\n\n  modalWindow = new window.ModalWindow('', content);\n};\n","window.modalWindowRecovery = () => {\n  const form = window.ModalWindow.createFormElement();\n\n  const title = document.createElement('div');\n  title.classList.add('modal-window-recovery__title');\n  title.textContent = 'Вкажіть email і ми надішлемо посилання для відновлення пароля';\n  form.appendChild(title);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true\n  });\n  form.appendChild(formInputEmail);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    formBtn.disabled = true;\n\n    const body = JSON.stringify({ email: form.email.value });\n    const url = '/index.php?route=api/recovery';\n\n    let errorText;\n    let hasError = false;\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        const responseText = 'Посилання для відновлення паролю відіслане на email';\n        const responseElement = window.ModalWindow.createResponse(responseText, 'success');\n        evt.target.parentElement.appendChild(responseElement);\n        evt.target.remove();\n      } else {\n        hasError = true;\n        const responseText = await response.text();\n        if (response.status === 400 && responseText === 'USER_EXISTS') {\n          errorText = 'Email не знайдено, перевірте та спопробуйте ще раз!';\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      }\n    } catch (err) {\n      errorText = `Помилка відправлення: ${err.message}`;\n    }\n\n    if (hasError) {\n      const modalWindowResponse = form.querySelector('.modal-window__response');\n      if (modalWindowResponse) modalWindowResponse.remove();\n      const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n      form.appendChild(responseElement);\n      formBtn.disabled = false;\n    }\n  };\n\n  form.addEventListener('submit', onSubmit);\n  new window.ModalWindow('Забули пароль?', form);\n};\n"]}