{"version":3,"sources":["main.js","header_banner.js","header_search.js","header_bottom.js","header.js","footer.js","footer_btn_scroll_to_top.js","nav_catalog.js","mobile_menu.js","modal_window.js","modal_window_feedback_error.js","modal_window_feedback_manager.js","modal_window_login.js","modal_window_recovery.js","modal_window_buy.js","modal_window_favorites.js","modal_window_wishlist.js","cart.js","cart_toast.js"],"names":[],"mappingszLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjtpRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClfile":"shared.min.js","sourcesContent":["window.shared = {};\n\nwindow.shared.throttle = (callback, wait, immediate = false) => {\n  let timeout = null;\n  let initialCall = true;\n\n  return (...args) => {\n    const callNow = immediate && initialCall;\n\n    const run = () => {\n      callback(...args);\n      timeout = null;\n    };\n\n    if (callNow) {\n      initialCall = false;\n      run();\n    }\n\n    if (!timeout) timeout = setTimeout(run, wait);\n  };\n};\n\nwindow.shared.debounce = (callback, wait, immediate = false) => {\n  let timeout = null;\n\n  return (...args) => {\n    const callNow = immediate && !timeout;\n    const run = () => callback(...args);\n\n    clearTimeout(timeout);\n    timeout = setTimeout(run, wait);\n\n    if (callNow) run();\n  };\n};\n\nwindow.shared.escapeRegExp = str => str.replace(/[\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\nwindow.shared.checkEmail = email => {\n  const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(email);\n};\n","const headerBanner = document.getElementById('headerBanner');\n\nif (headerBanner) {\n  const onResizeHeaderBanner = () => {\n    const { height } = headerBanner.getBoundingClientRect();\n    document.body.style.setProperty('--header-banner-top', `${height}px`);\n  };\n  const onResizeHeaderBannerThrottle = window.shared.throttle(onResizeHeaderBanner, 1000);\n  onResizeHeaderBannerThrottle();\n\n  window.addEventListener('resize', onResizeHeaderBannerThrottle);\n}\n","const onSubmitHeaderSearch = evt => {\n  evt.preventDefault();\n  const search = evt.target.search.value.trim();\n  if (!search) return;\n  window.location = `/index.php?route=search&search=${search}`;\n};\n\nconst headerSearch = document.getElementById('headerSearch');\nheaderSearch.addEventListener('submit', onSubmitHeaderSearch);\n\nheaderSearch.addEventListener('focusin', () => document.body.classList.add('body--header-search-focus'));\nheaderSearch.addEventListener('focusout', () => document.body.classList.remove('body--header-search-focus'));\n\n// ============================================================================\n\nconst headerSearchInputInput = headerSearch.querySelector('.header-search__input-input');\n\nconst headerSearchCatalogs = headerSearch.querySelector('.header-search__catalogs');\nconst headerSearchProducts = headerSearch.querySelector('.header-search__products');\n\nconst headerSearchWrapperDrop = headerSearch.querySelector('.header-search__wrapper-drop');\nconst headerSearchDrop = headerSearch.querySelector('.header-search__drop');\n\nconst onResizeHeaderSearchWrapperDrop = () => {\n  headerSearchWrapperDrop.style.setProperty('--height', `${headerSearchDrop.scrollHeight}px`);\n};\nconst onResizeHDWrapperDropThrottle = window.shared.throttle(onResizeHeaderSearchWrapperDrop, 16);\n\n// ============================================================================\n\nconst headerSearchClose = () => {\n  document.body.classList.remove('body--header-search-open');\n  window.removeEventListener('resize', onResizeHDWrapperDropThrottle);\n};\n\nconst headerSearcBackdrop = headerSearch.querySelector('.header-search__backdrop');\nheaderSearcBackdrop.addEventListener('click', headerSearchClose);\n\n// ============================================================================\n\nconst getHeaderSearchCatalogsItem = (search, catalog) => {\n  const main = document.createElement('li');\n\n  const item = document.createElement('a');\n  item.href = catalog.categoryUrl;\n  item.classList.add('header-search__catalogs-item');\n  main.appendChild(item);\n\n  const itemSearch = document.createElement('div');\n  itemSearch.classList.add('header-search__catalogs-item-search');\n  item.appendChild(itemSearch);\n\n  const xmlns = 'http://www.w3.org/2000/svg';\n  const xlink = 'http://www.w3.org/1999/xlink';\n  const itemSearchImg = document.createElementNS(xmlns, 'svg');\n  itemSearchImg.classList.add('header-search__catalogs-item-search-img');\n  itemSearch.appendChild(itemSearchImg);\n\n  const itemSearchImgUse = document.createElementNS(xmlns, 'use');\n  itemSearchImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-search');\n  itemSearchImg.appendChild(itemSearchImgUse);\n\n  itemSearch.appendChild(document.createTextNode(search));\n\n  const itemImgArrow = document.createElementNS(xmlns, 'svg');\n  itemImgArrow.classList.add('header-search__catalogs-item-img-arrow');\n  item.appendChild(itemImgArrow);\n\n  const itemImgArrowUse = document.createElementNS(xmlns, 'use');\n  itemImgArrowUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-arrow-right');\n  itemImgArrow.appendChild(itemImgArrowUse);\n\n  const itemTitle = document.createElement('span');\n  itemTitle.classList.add('header-search__catalogs-item-title');\n  itemTitle.textContent = 'В категорії';\n  item.appendChild(itemTitle);\n\n  const itemValue = document.createElement('span');\n  itemValue.classList.add('header-search__catalogs-item-value');\n  itemValue.textContent = catalog.categoryName;\n  item.appendChild(itemValue);\n\n  item.appendChild(itemImgArrow.cloneNode(true));\n\n  const itemValue0 = document.createElement('span');\n  itemValue0.classList.add('header-search__catalogs-item-value', 'header-search__catalogs-item-value--0');\n  itemValue0.textContent = catalog.categoryName0;\n  item.appendChild(itemValue0);\n\n  return main;\n};\n\n// ============================================================================\n\nconst getHeaderSearchProductsItem = product => {\n  const item = document.createElement('li');\n  item.classList.add('header-search__products-item');\n\n  const itemLink = document.createElement('a');\n  itemLink.href = product.productUrl;\n  itemLink.classList.add('header-search__products-item-link');\n  item.appendChild(itemLink);\n\n  const itemImg = document.createElement('img');\n  itemImg.classList.add('header-search__products-item-link-img');\n  itemImg.src = product.image;\n  itemLink.appendChild(itemImg);\n\n  const itemName = document.createElement('div');\n  itemName.classList.add('header-search__products-item-link-name');\n  itemName.textContent = product.productName;\n  itemLink.appendChild(itemName);\n\n  const itemPrice = document.createElement('div');\n  itemPrice.classList.add('header-search__products-item-link-price');\n  itemLink.appendChild(itemPrice);\n\n  if (product.isPromotions) {\n    const itemPriceOld = document.createElement('div');\n    itemPriceOld.classList.add('header-search__products-item-link-price-old');\n    itemPriceOld.textContent = `${product.priceOldUAH} грн`;\n    itemPrice.appendChild(itemPriceOld);\n  }\n\n  const itemPriceCurrent = document.createElement('div');\n  itemPriceCurrent.classList.add('header-search__products-item-link-price-current');\n  itemPrice.appendChild(itemPriceCurrent);\n\n  const itemPriceUAH = document.createElement('div');\n  itemPriceUAH.classList.add('header-search__products-item-link-price-uah');\n  itemPriceUAH.textContent = `${product.priceUAH} грн`;\n  itemPriceCurrent.appendChild(itemPriceUAH);\n\n  itemPriceCurrent.appendChild(document.createTextNode(`$ ${product.priceUSD}`));\n  return item;\n};\n\n// ============================================================================\n\nconst onHeaderSearchOpen = async ({ target }) => {\n  let data = [];\n  target.value = target.value.replace(/\\\\/g, '');\n  const search = target.value.trim();\n\n  if (search.length > 1) {\n    const url = '/index.php?route=shared/header_search/search';\n    const body = JSON.stringify({ search });\n\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        data = await response.json();\n      } else {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  headerSearchCatalogs.innerHTML = '';\n  headerSearchProducts.innerHTML = '';\n\n  if (data.length) {\n    const headerSearchDropInsert = el => {\n      headerSearchCatalogs.appendChild(getHeaderSearchCatalogsItem(search, el));\n      headerSearchProducts.appendChild(getHeaderSearchProductsItem(el));\n    };\n\n    setTimeout(() => {\n      onResizeHeaderSearchWrapperDrop();\n      document.body.classList.add('body--header-search-open');\n    }, 1);\n\n    data.forEach(headerSearchDropInsert);\n    window.addEventListener('resize', onResizeHDWrapperDropThrottle);\n  } else {\n    headerSearchClose();\n  }\n};\n\nconst onHeaderSearchOpenDebounce = window.shared.debounce(onHeaderSearchOpen, 500);\n\nheaderSearchInputInput.addEventListener('input', onHeaderSearchOpenDebounce);\nheaderSearchInputInput.addEventListener('focus', onHeaderSearchOpen);\n","const headerLogin = document.getElementById('headerLogin');\nif (headerLogin) headerLogin.addEventListener('click', () => window.modalWindowLogin());\n\n// ==============================================\n\nconst headerFavorites = document.getElementById('headerFavorites');\nif (headerFavorites) headerFavorites.addEventListener('click', () => window.modalWindowLogin());\n\n// ==============================================\n\nconst headerCart = document.getElementById('headerCart');\nif (headerCart) headerCart.addEventListener('click', () => window.cartOpen());\n","const onResizeHeader = () => {\n  const { bottom } = document.getElementById('header').getBoundingClientRect();\n  document.body.style.setProperty('--header-bottom', `${bottom}px`);\n};\n\nonResizeHeader();\n\nconst onResizeHeaderThrottle = window.shared.throttle(onResizeHeader, 100);\nwindow.addEventListener('resize', onResizeHeaderThrottle);\nwindow.addEventListener('scroll', onResizeHeaderThrottle);\n","const footerWindowModalFeedbackError = document.getElementById('footerWindowModalFeedbackError');\nfooterWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst footerWindowModalFeedbackManager = document.getElementById('footerWindowModalFeedbackManager');\nfooterWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n\nconst siteLoaderEl = document.getElementById('siteLoader');\n\nwindow.showSiteLoader = () => {\n  siteLoaderEl.classList.remove('hide');\n  document.body.classList.add('body-site-loader');\n};\n\nwindow.hideSiteLoader = () => {\n  siteLoaderEl.classList.add('hide');\n  document.body.classList.remove('body-site-loader');\n};\n","const btnScrollToTopEl = document.getElementById('btnScrollToTop');\nconst onClickbtnScrollToTop = () => window.scrollTo({ left: 0, top: 0, behavior: 'smooth' });\nbtnScrollToTopEl.addEventListener('click', onClickbtnScrollToTop);\n\nconst onHide = entries => {\n  entries.forEach(({ isIntersecting }) => {\n    isIntersecting\n      ? btnScrollToTopEl.classList.add('footer-btn-scroll-to-top--hidden')\n      : btnScrollToTopEl.classList.remove('footer-btn-scroll-to-top--hidden');\n  });\n};\n\nconst interseptorHideFooterBtnScrollToTop = document.createElement('div');\ninterseptorHideFooterBtnScrollToTop.classList.add('interseptor-hide-footer-btn-scroll-to-top');\ndocument.body.appendChild(interseptorHideFooterBtnScrollToTop);\n\n(new IntersectionObserver(onHide)).observe(interseptorHideFooterBtnScrollToTop);\n\nconst onDock = entries => {\n  entries.forEach(({ isIntersecting }) => {\n    isIntersecting\n      ? btnScrollToTopEl.classList.remove('footer-btn-scroll-to-top--float')\n      : btnScrollToTopEl.classList.add('footer-btn-scroll-to-top--float');\n  });\n};\n\n(new IntersectionObserver(onDock))\n  .observe(document.getElementById('interseptorDockFooterBtnScrollToTop'));\n","const navCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\n\nconst deactivateCategoriesListActivate = row => {\n  if (!window.matchMedia('(min-width: 1080px)').matches) return;\n  const navCategoriesList = row.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.remove('nav-catalog__list--is-visible');\n};\n\n$('.nav-catalog__list').menuAim({\n  activate: navCategoriesListActivate,\n  deactivate: deactivateCategoriesListActivate,\n  exitMenu: () => true\n});\n\nconst navCategoriesBtnNavList = document.querySelectorAll('.nav-catalog__link--has-children');\nconst onClickNavCategoriesBtnNav = evt => {\n  if (window.matchMedia('(min-width: 1080px)').matches) return;\n  evt.preventDefault();\n  const navCategoriesList = evt.target.parentElement.querySelector('.nav-catalog__list');\n  if (navCategoriesList) navCategoriesList.classList.add('nav-catalog__list--is-visible');\n};\nnavCategoriesBtnNavList.forEach(el => el.addEventListener('click', onClickNavCategoriesBtnNav));\n","const mobileMenu = document.getElementById('mobileMenu');\nconst btnMobileMenu = document.getElementById('btnMobileMenu');\n\nconst onClickBtnMobileMenu = () => {\n  if (document.body.classList.contains('body--mobile-menu-open')) {\n    document.body.classList.remove('body--mobile-menu-catalog-open');\n    const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n    navCategoriesList.forEach(el => el.classList.remove('nav-catalog__list--is-visible'));\n  }\n\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnMobileMenu.addEventListener('click', onClickBtnMobileMenu);\n\n// ------------------------------------------------------------------\n\nconst btnHeaderMenuEl = document.getElementById('btnHeaderMenu');\n\nconst onClickBtnHeaderMenu = evt => {\n  if (evt.target !== evt.currentTarget) return;\n  document.body.classList.toggle('body--mobile-menu-open');\n};\n\nbtnHeaderMenuEl.addEventListener('click', onClickBtnHeaderMenu);\nmobileMenu.addEventListener('click', onClickBtnHeaderMenu);\n\n// ------------------------------------------------------------------\n\nconst btnMobileMenuCategories = document.getElementById('btnMobileMenuCategories');\n\nconst onClickBtnMobileMenuCategories = () => {\n  if (document.body.classList.contains('body--mobile-menu-catalog-open')) {\n    const navCategoriesList = document.querySelectorAll('.nav-catalog__list--is-visible');\n    if (!navCategoriesList.length) {\n      document.body.classList.remove('body--mobile-menu-catalog-open');\n      return;\n    }\n    const navCategoriesListLast = navCategoriesList[navCategoriesList.length - 1];\n    navCategoriesListLast.classList.remove('nav-catalog__list--is-visible');\n  } else {\n    document.body.classList.add('body--mobile-menu-catalog-open');\n  }\n};\n\nbtnMobileMenuCategories.addEventListener('click', onClickBtnMobileMenuCategories);\n\n// ------------------------------------------------------------------\n\nconst mmWindowModalFeedbackError = document.getElementById('mmWindowModalFeedbackError');\nmmWindowModalFeedbackError.addEventListener('click', () => window.modalWindowFeedbackError());\n\nconst mmWindowModalFeedbackManager = document.getElementById('mmWindowModalFeedbackManager');\nmmWindowModalFeedbackManager.addEventListener('click', () => window.modalWindowFeedbackManager());\n\n// ------------------------------------------------------------------\n\nconst wrapperMobileMenuContacts = document.getElementById('wrapperMobileMenuContacts');\n\nconst setMobileMenuContactsHeight = height => wrapperMobileMenuContacts.style.setProperty('--height', height);\n\nconst onResizeMobileMenuContacts = () => setMobileMenuContactsHeight(`${wrapperMobileMenuContacts.firstElementChild.scrollHeight}px`);\nconst onResizeMobileMenuContactsThrottle = window.shared.throttle(onResizeMobileMenuContacts, 500);\n\nconst onClickMobileMenuBtnContact = () => {\n  if (wrapperMobileMenuContacts.style.getPropertyValue('--height')) {\n    setMobileMenuContactsHeight(null);\n    window.removeEventListener('resize', onResizeMobileMenuContactsThrottle);\n  } else {\n    onResizeMobileMenuContacts();\n    window.addEventListener('resize', onResizeMobileMenuContactsThrottle);\n  }\n};\n\nconst mobileMenuBtnContact = document.getElementById('mobileMenuBtnContact');\nmobileMenuBtnContact.addEventListener('click', onClickMobileMenuBtnContact);\n\n// ============================================================================\n\nconst mobileMenuLogin = document.getElementById('mobileMenuLogin');\nif (mobileMenuLogin) mobileMenuLogin.addEventListener('click', () => window.modalWindowLogin());\n\n// ============================================================================\n\nconst mobileMenuFavorites = document.getElementById('mobileMenuFavorites');\nif (mobileMenuFavorites) mobileMenuFavorites.addEventListener('click', () => window.modalWindowLogin());\n","window.ModalWindow = class {\n  constructor(titleText, bodyInner) {\n    this.createModal(titleText, bodyInner);\n    document.body.classList.add('body--window-modal-open');\n    setTimeout(() => this.modalWindow.classList.add('modal-window--open'), 10);\n  }\n\n  static createResponse(text, type) {\n    const response = document.createElement('div');\n    response.classList.add('modal-window__response', `modal-window__response--${type}`);\n    response.innerHTML = text;\n    return response;\n  }\n\n  static createFormElement() {\n    const form = document.createElement('form');\n    form.classList.add('modal-window__form');\n    return form;\n  }\n\n  // static createFormCheckBox({\n  //   title, name, required\n  // }) {\n  //   const formInput = document.createElement('label');\n  //   formInput.classList.add('form-ckeckbox');\n\n  //   const inputNameInput = document.createElement('input');\n  //   inputNameInput.classList.add('form-ckeckbox__input');\n  //   inputNameInput.type = 'checkbox';\n  //   inputNameInput.name = name;\n  //   if (required) inputNameInput.required = true;\n  //   formInput.appendChild(inputNameInput);\n\n  //   const xmlns = 'http://www.w3.org/2000/svg';\n  //   const xlink = 'http://www.w3.org/1999/xlink';\n  //   const checkImg = document.createElementNS(xmlns, 'svg');\n  //   checkImg.classList.add('form-ckeckbox__check-img');\n  //   formInput.appendChild(checkImg);\n\n  //   const checkImgUse = document.createElementNS(xmlns, 'use');\n  //   checkImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-check');\n  //   checkImg.appendChild(checkImgUse);\n\n  //   const formInputTitle = document.createElement('span');\n  //   formInputTitle.classList.add('form-input__title1');\n  //   formInput.appendChild(formInputTitle);\n  //   formInputTitle.appendChild(document.createTextNode(title));\n  //   return formInput;\n  // }\n\n  static createFormInput({\n    title, name, placeholder, required, type, element = 'input', maxLength\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputNameInput = document.createElement(element);\n    inputNameInput.classList.add(`form-input__${element}`);\n    inputNameInput.name = name;\n    if (placeholder) inputNameInput.placeholder = placeholder;\n    if (required) inputNameInput.required = true;\n    if (maxLength) inputNameInput.maxLength = maxLength;\n    if (type) inputNameInput.type = type;\n    formInput.appendChild(inputNameInput);\n\n    return formInput;\n  }\n\n  static createFormInputPhone({\n    title, name, required, value\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputNameInput = document.createElement('input');\n    inputNameInput.classList.add('form-input__input');\n    inputNameInput.name = name;\n    inputNameInput.pattern = '\\\\+38\\\\(0\\\\d{2}\\\\)\\\\d{3}-\\\\d{2}-\\\\d{2}';\n    if (required) inputNameInput.required = true;\n    formInput.appendChild(inputNameInput);\n\n    const mask = IMask(inputNameInput, { mask: '+38(\\\\000)000-00-00', lazy: false });\n    const invalidText = 'Неправильний номер телефону. Формат 38(0xx)xxx-xx-xx';\n\n    if (value) mask.unmaskedValue = value;\n\n    inputNameInput.addEventListener('invalid', () => inputNameInput.setCustomValidity(invalidText));\n    inputNameInput.addEventListener('input', () => inputNameInput.setCustomValidity(''));\n\n    return { element: formInput, mask };\n  }\n\n  static createFormInputPassword({\n    title, name, required, confirmElement, isConfirm = false, minLength, maxLength\n  }) {\n    const formInput = document.createElement('label');\n    formInput.classList.add('form-input');\n\n    const formInputTitle = document.createElement('div');\n    formInputTitle.classList.add('form-input__title');\n    formInput.appendChild(formInputTitle);\n\n    formInputTitle.appendChild(document.createTextNode(title));\n\n    if (required) {\n      const inputNameTitleRequired = document.createElement('span');\n      inputNameTitleRequired.classList.add('form-input__title-required');\n      inputNameTitleRequired.textContent = '*';\n      formInputTitle.appendChild(inputNameTitleRequired);\n    }\n\n    const inputWrapperInput = document.createElement('div');\n    inputWrapperInput.classList.add('form-input__wrapper-input-password');\n    formInput.appendChild(inputWrapperInput);\n\n    const inputNameInput = document.createElement('input');\n    inputNameInput.classList.add('form-input__input', 'form-input__input--password');\n    inputNameInput.name = name;\n    if (required) inputNameInput.required = true;\n    if (minLength) inputNameInput.minLength = minLength;\n    if (maxLength) inputNameInput.maxLength = maxLength;\n    inputNameInput.type = 'password';\n    inputWrapperInput.appendChild(inputNameInput);\n\n    const onInput = ({ target }) => {\n      if (confirmElement) {\n        confirmElement.pattern = window.shared.escapeRegExp(target.value);\n      }\n      inputNameInput.setCustomValidity('');\n    };\n\n    const onInvalid = () => {\n      if (isConfirm) inputNameInput.setCustomValidity('Паролі неспівпадають');\n    };\n\n    inputNameInput.addEventListener('input', onInput);\n    inputNameInput.addEventListener('invalid', onInvalid);\n\n    const btnVisible = document.createElement('button');\n    btnVisible.classList.add('form-input__btn-visible-password');\n    btnVisible.type = 'button';\n    inputWrapperInput.appendChild(btnVisible);\n\n    const onClickBtnVisible = () => {\n      if (btnVisible.classList.contains('form-input__btn-visible-password--active')) {\n        btnVisible.classList.remove('form-input__btn-visible-password--active');\n        inputNameInput.type = 'password';\n      } else {\n        btnVisible.classList.add('form-input__btn-visible-password--active');\n        inputNameInput.type = 'text';\n      }\n    };\n    btnVisible.addEventListener('click', onClickBtnVisible);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const btnVisiblePasswordImg = document.createElementNS(xmlns, 'svg');\n    btnVisiblePasswordImg.classList.add('form-input__btn-visible-password-img');\n    btnVisible.appendChild(btnVisiblePasswordImg);\n\n    const btnVisiblePasswordImgUse = document.createElementNS(xmlns, 'use');\n    btnVisiblePasswordImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-eye');\n    btnVisiblePasswordImg.appendChild(btnVisiblePasswordImgUse);\n\n    const line = document.createElement('span');\n    line.classList.add('form-input__btn-visible-password-line');\n    btnVisible.appendChild(line);\n\n    return formInput;\n  }\n\n  static createFormBtn(title) {\n    const formBtn = document.createElement('button');\n    formBtn.classList.add('form-btn');\n    formBtn.textContent = title;\n    return formBtn;\n  }\n\n  static createFormHidden(name, value) {\n    const formHidden = document.createElement('input');\n    formHidden.type = 'hidden';\n    formHidden.value = value;\n    formHidden.name = name;\n    return formHidden;\n  }\n\n  static createFormNote(text) {\n    const formNote = document.createElement('div');\n    formNote.classList.add('form-note');\n    formNote.innerHTML = text;\n    return formNote;\n  }\n\n  createModal(titleText, bodyInner) {\n    const main = document.createElement('div');\n    main.classList.add('modal-window');\n    main.tabIndex = -1;\n    main.addEventListener('click', this.onClickClose.bind(this));\n    main.addEventListener('keydown', ({ key }) => key === 'Escape' && this.close());\n\n    const content = document.createElement('div');\n    content.classList.add('modal-window__content');\n    main.appendChild(content);\n\n    const header = document.createElement('div');\n    header.classList.add('modal-window__header');\n    content.appendChild(header);\n\n    const btnClose = document.createElement('button');\n    btnClose.classList.add('modal-window__btn-close');\n    btnClose.title = 'Закрити (Esc)';\n    btnClose.addEventListener('click', this.onClickClose.bind(this));\n    header.appendChild(btnClose);\n\n    const title = document.createElement('div');\n    title.classList.add('modal-window__title');\n    title.textContent = titleText;\n    header.appendChild(title);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const btnCloseImg = document.createElementNS(xmlns, 'svg');\n    btnCloseImg.classList.add('modal-window__btn-close-img');\n    btnClose.appendChild(btnCloseImg);\n\n    const btnCloseImgUse = document.createElementNS(xmlns, 'use');\n    btnCloseImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-close');\n    btnCloseImg.appendChild(btnCloseImgUse);\n\n    const body = document.createElement('div');\n    body.classList.add('modal-window__body');\n    body.appendChild(bodyInner);\n    content.appendChild(body);\n\n    document.body.appendChild(main);\n\n    this.modalWindow = main;\n    this.body = body;\n  }\n\n  onClickClose(evt) {\n    if (evt.target === evt.currentTarget) this.close();\n  }\n\n  close() {\n    document.body.classList.remove('body--window-modal-open');\n    this.modalWindow.classList.remove('modal-window--open');\n    setTimeout(() => this.modalWindow.remove(), 500);\n  }\n};\n","window.modalWindowFeedbackError = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'error');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Суть проблеми', name: 'description', placeholder: 'Опис проблеми...', required: true, element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати повідомлення');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'error';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Повідомлення про помилку', form);\n};\n","window.modalWindowFeedbackManager = () => {\n  const form = document.createElement('form');\n  form.classList.add('modal-window__form');\n\n  const formNote = window.ModalWindow.createFormNote(`\n    У вас виникли запитання, зауваження, пропозиції?<br>\n    Заповніть, будь ласка, наступну форму.\n    Ця інформація потрапить до керівництва компанії (директора та керівників підрозділів).\n  `);\n  form.appendChild(formNote);\n\n  const formHiddenType = window.ModalWindow.createFormHidden('type', 'manager');\n  form.appendChild(formHiddenType);\n\n  const formInputName = window.ModalWindow.createFormInput({\n    title: 'Ім\\'я', name: 'name', placeholder: 'Iван', required: true\n  });\n  form.appendChild(formInputName);\n\n  const formInputPhone = window.ModalWindow.createFormInput({\n    title: 'Телефон', name: 'phone', placeholder: '+38(___)___-__-__', required: true, type: 'tel'\n  });\n  form.appendChild(formInputPhone);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email'\n  });\n  form.appendChild(formInputEmail);\n\n  const formInputDescription = window.ModalWindow.createFormInput({\n    title: 'Коментар', name: 'description', placeholder: 'Коментар', element: 'textarea'\n  });\n  form.appendChild(formInputDescription);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати повідомлення');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    evt.target.querySelector('.form-btn').disabled = true;\n\n    const body = JSON.stringify({\n      type: form.type.value,\n      name: form.name.value,\n      phone: form.phone.value,\n      email: form.email.value,\n      description: form.description.value\n    });\n\n    let mwResponseText = 'Повідомлення успішно відправлено';\n    let mwResponseClass = 'success';\n    const url = '/index.php?route=api/feedback';\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      mwResponseText = `Помилка відправлення: ${err.message}`;\n      mwResponseClass = 'error';\n    }\n\n    const mwResponse = document.createElement('div');\n    mwResponse.classList.add('modal-window__response', `modal-window__response--${mwResponseClass}`);\n    mwResponse.textContent = mwResponseText;\n\n    const modalWindowBody = evt.target.closest('.modal-window__body');\n    evt.target.remove();\n    modalWindowBody.appendChild(mwResponse);\n  };\n\n  form.addEventListener('submit', onSubmit);\n\n  new window.ModalWindow('Написати директору', form);\n};\n\n// Відкривати форму по посиланню\nif (window.location.hash === '#manager') window.modalWindowFeedbackManager();\n","window.modalWindowLogin = () => {\n  let modalWindow;\n\n  const createFormRegister = () => {\n    const form = window.ModalWindow.createFormElement();\n\n    const formInputFirstName = window.ModalWindow.createFormInput({\n      title: 'Ім\\'я', name: 'firstName', placeholder: 'Iван', required: true, maxLength: 32\n    });\n    form.appendChild(formInputFirstName);\n\n    const formInputLastName = window.ModalWindow.createFormInput({\n      title: 'Прізвище', name: 'lastName', placeholder: 'Iванов', required: true, maxLength: 32\n    });\n    form.appendChild(formInputLastName);\n\n    const phone = window.ModalWindow.createFormInputPhone({ title: 'Телефон', name: 'phone', required: true });\n    const formInputPhone = phone.element;\n    form.appendChild(formInputPhone);\n\n    const formInputEmail = window.ModalWindow.createFormInput({\n      title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true, maxLength: 96\n    });\n    form.appendChild(formInputEmail);\n\n    const formInputPasswordConfirm = window.ModalWindow.createFormInputPassword({\n      title: 'Повторіть пароль', name: 'confirm', isConfirm: true, required: true\n    });\n\n    const formInputPassword = window.ModalWindow.createFormInputPassword({\n      title: 'Пароль',\n      name: 'password',\n      required: true,\n      confirmElement: formInputPasswordConfirm.querySelector('.form-input__input'),\n      minLength: 4,\n      maxLength: 20\n    });\n\n    form.appendChild(formInputPassword);\n    form.appendChild(formInputPasswordConfirm);\n\n    const recaptchaScript = document.createElement('script');\n    recaptchaScript.src = '//www.google.com/recaptcha/api.js?hl=ru';\n    form.appendChild(recaptchaScript);\n\n    const recaptcha = document.createElement('div');\n    recaptcha.classList.add('g-recaptcha', 'modal-window-login__recaptcha');\n    recaptcha.dataset.sitekey = '6Le97jQbAAAAAPRfGkHDjfUe6vPdmKlaNnmsTtCI';\n    form.appendChild(recaptcha);\n\n    const termToAgree = document.createElement('div');\n    termToAgree.classList.add('modal-window-login__term-to-agree');\n    termToAgree.appendChild(document.createTextNode('Реєструючись, ви погоджуєтеся з '));\n    form.appendChild(termToAgree);\n\n    const linkTermToAgree = document.createElement('a');\n    linkTermToAgree.classList.add('modal-window-login__term-to-link');\n    linkTermToAgree.textContent = 'угодою користувача';\n    linkTermToAgree.href = '/agree_to_terms';\n    linkTermToAgree.target = '_blank';\n    termToAgree.appendChild(linkTermToAgree);\n\n    const formBtn = window.ModalWindow.createFormBtn('Реєстрація');\n    form.appendChild(formBtn);\n\n    const onSubmit = async evt => {\n      evt.preventDefault();\n\n      formBtn.disabled = true;\n      recaptcha.classList.remove('modal-window-login__recaptcha--error');\n\n      const url = '/index.php?route=api/register';\n      const body = JSON.stringify({\n        firstName: form.firstName.value,\n        lastName: form.lastName.value,\n        email: form.email.value,\n        phone: phone.mask.unmaskedValue,\n        password: form.password.value,\n        captcha: window.grecaptcha.getResponse()\n      });\n\n      let errorText;\n      try {\n        const response = await fetch(url, { method: 'POST', body });\n        const responseText = await response.text();\n        if (response.ok) {\n          window.location = responseText;\n          return;\n        }\n        if (response.status === 400 && responseText === 'INVALID') {\n          errorText = 'Помилка валідації';\n        } else if (response.status === 400 && responseText === 'CAPTCHA') {\n          errorText = 'Помилка капчі';\n          window.grecaptcha.reset();\n          recaptcha.classList.add('modal-window-login__recaptcha--error');\n        } else if (response.status === 400 && responseText === 'USER_EXISTS') {\n          errorText = 'Данний email вже зареєстрований';\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      } catch (err) {\n        errorText = `Помилка відправлення: ${err.message}`;\n      }\n\n      const modalWindowResponse = form.querySelector('.modal-window__response');\n      if (modalWindowResponse) modalWindowResponse.remove();\n      const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n      form.appendChild(responseElement);\n      formBtn.disabled = false;\n    };\n\n    form.addEventListener('submit', onSubmit);\n    return form;\n  };\n\n  const createFormLogin = () => {\n    const form = window.ModalWindow.createFormElement();\n\n    const formInputEmail = window.ModalWindow.createFormInput({\n      title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true\n    });\n    form.appendChild(formInputEmail);\n\n    const formInputPassword = window.ModalWindow.createFormInputPassword({\n      title: 'Пароль', name: 'password', required: true\n    });\n    form.appendChild(formInputPassword);\n\n    const wrapperBtnForgotten = document.createElement('div');\n    wrapperBtnForgotten.classList.add('modal-window-login__wrapper-btn-forgotten');\n    form.appendChild(wrapperBtnForgotten);\n\n    const btnForgotten = document.createElement('button');\n    btnForgotten.type = 'button';\n    btnForgotten.classList.add('modal-window-login__btn-forgotten');\n    btnForgotten.textContent = 'Забули пароль? Відновити.';\n    wrapperBtnForgotten.appendChild(btnForgotten);\n\n    const onClickRecovery = () => {\n      modalWindow.close();\n      window.modalWindowRecovery();\n    };\n    btnForgotten.addEventListener('click', onClickRecovery);\n\n    const formBtn = window.ModalWindow.createFormBtn('Авторизуватися');\n    form.appendChild(formBtn);\n\n    const onSubmit = async evt => {\n      evt.preventDefault();\n      formBtn.disabled = true;\n\n      const url = '/index.php?route=api/login';\n      const body = JSON.stringify({\n        email: form.email.value,\n        password: form.password.value\n      });\n\n      let errorText;\n      try {\n        const response = await fetch(url, { method: 'POST', body });\n        if (response.ok) return window.location.reload();\n\n        const responseText = await response.text();\n        if (response.status === 400 && responseText === 'ATTEMPTS') {\n          errorText = 'Ви перевищили максимальну кількість спроб авторизації.'\n            + ' Будь ласка, спробуйте авторизації на сайті через 1 годину';\n        } else if (response.status === 401) {\n          errorText = 'Неправильний email або пароль';\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      } catch (err) {\n        errorText = `Помилка відправлення: ${err.message}`;\n      }\n\n      const modalWindowResponse = form.querySelector('.modal-window__response');\n      if (modalWindowResponse) modalWindowResponse.remove();\n      const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n      form.appendChild(responseElement);\n      formBtn.disabled = false;\n    };\n\n    form.addEventListener('submit', onSubmit);\n    return form;\n  };\n\n  const content = document.createElement('div');\n\n  const tabs = document.createElement('div');\n  tabs.classList.add('modal-window-login__tabs');\n  content.appendChild(tabs);\n\n  const btnRegister = document.createElement('button');\n  btnRegister.type = 'button';\n  btnRegister.classList.add('modal-window-login__tab');\n  btnRegister.textContent = 'Реєстрація';\n  tabs.appendChild(btnRegister);\n\n  const btnLogin = document.createElement('button');\n  btnLogin.type = 'button';\n  btnLogin.classList.add('modal-window-login__tab', 'modal-window-login__tab--active');\n  btnLogin.textContent = 'Авторизація';\n  tabs.appendChild(btnLogin);\n\n  let formRegister;\n  const formLogin = createFormLogin();\n\n  const onClickTab = ({ target }) => {\n    if (target.classList.contains('modal-window-login__tab--active')) return;\n\n    btnRegister.classList.toggle('modal-window-login__tab--active');\n    btnLogin.classList.toggle('modal-window-login__tab--active');\n\n    if (!formRegister) {\n      formRegister = createFormRegister();\n      content.appendChild(formRegister);\n    } else {\n      formRegister.classList.toggle('modal-window__form--hidden');\n    }\n\n    formLogin.classList.toggle('modal-window__form--hidden');\n  };\n\n  btnRegister.addEventListener('click', onClickTab);\n  btnLogin.addEventListener('click', onClickTab);\n\n  content.appendChild(formLogin);\n\n  modalWindow = new window.ModalWindow('', content);\n};\n","window.modalWindowRecovery = () => {\n  const form = window.ModalWindow.createFormElement();\n\n  const title = document.createElement('div');\n  title.classList.add('modal-window-recovery__title');\n  title.textContent = 'Вкажіть email і ми надішлемо посилання для відновлення пароля';\n  form.appendChild(title);\n\n  const formInputEmail = window.ModalWindow.createFormInput({\n    title: 'Email', name: 'email', placeholder: 'user@example.com', type: 'email', required: true\n  });\n  form.appendChild(formInputEmail);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    formBtn.disabled = true;\n\n    const body = JSON.stringify({ email: form.email.value });\n    const url = '/index.php?route=api/recovery';\n\n    let errorText;\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        const responseText = 'Посилання для відновлення паролю відіслане на email';\n        const responseElement = window.ModalWindow.createResponse(responseText, 'success');\n        evt.target.parentElement.appendChild(responseElement);\n        evt.target.remove();\n        return;\n      }\n\n      const responseText = await response.text();\n      if (response.status === 400 && responseText === 'USER_EXISTS') {\n        errorText = 'Email не знайдено, перевірте та спопробуйте ще раз!';\n      } else {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n    } catch (err) {\n      errorText = `Помилка відправлення: ${err.message}`;\n    }\n\n    const modalWindowResponse = form.querySelector('.modal-window__response');\n    if (modalWindowResponse) modalWindowResponse.remove();\n    const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n    form.appendChild(responseElement);\n    formBtn.disabled = false;\n  };\n\n  form.addEventListener('submit', onSubmit);\n  new window.ModalWindow('Забули пароль?', form);\n};\n","window.modalWindowBuy = productId => {\n  const form = window.ModalWindow.createFormElement();\n\n  const phone = window.ModalWindow.createFormInputPhone({\n    title: 'Телефон', name: 'phone', required: true, value: window.customerPhone\n  });\n  const formInputPhone = phone.element;\n  form.appendChild(formInputPhone);\n\n  const formBtn = window.ModalWindow.createFormBtn('Надіслати');\n  form.appendChild(formBtn);\n\n  const onSubmit = async evt => {\n    evt.preventDefault();\n    formBtn.disabled = true;\n\n    const url = '/index.php?route=api/buy';\n    const body = JSON.stringify({\n      phone: phone.mask.unmaskedValue,\n      productId\n    });\n\n    let errorText;\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        const responseText = 'Дкуємо за покупку. Протягом 15 хвилин з вами зв\\'яжуться для оформлення замовлення';\n        const responseElement = window.ModalWindow.createResponse(responseText, 'success');\n        evt.target.parentElement.appendChild(responseElement);\n        evt.target.remove();\n        return;\n      }\n\n      const responseText = await response.text();\n      if (response.status === 400 && responseText === 'INVALID') {\n        errorText = 'Помилка валідації';\n      } else {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n    } catch (err) {\n      errorText = `Помилка відправлення: ${err.message}`;\n    }\n\n    const modalWindowResponse = form.querySelector('.modal-window__response');\n    if (modalWindowResponse) modalWindowResponse.remove();\n    const responseElement = window.ModalWindow.createResponse(errorText, 'error');\n    form.appendChild(responseElement);\n    formBtn.disabled = false;\n  };\n\n  form.addEventListener('submit', onSubmit);\n  new window.ModalWindow('Купити в 1 клік', form);\n};\n","window.modalWindowFavorites = async productId => {\n  const createBtn = (isInsert, id) => {\n    const onClickBtn = async ({ target }) => {\n      target.disabled = true;\n      const { type } = target.dataset;\n\n      try {\n        const url = `/index.php?route=api/${type}FavoriteProduct`;\n        const body = JSON.stringify({ favoriteId: target.dataset.id, productId });\n\n        const response = await fetch(url, { method: 'POST', body });\n        if (response.ok) {\n          target.parentElement.appendChild(createBtn(type === 'remove' ? 0 : 1, target.dataset.id));\n          target.remove();\n        } else {\n          throw new Error(`${response.status} ${response.statusText}`);\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    };\n\n    const itemBtn = document.createElement('button');\n    itemBtn.classList.add('modal-window-favorites__item-btn');\n    itemBtn.title = isInsert ? 'Видалити з обраного' : 'Додати до обраного';\n    itemBtn.dataset.id = id;\n    itemBtn.dataset.type = isInsert ? 'remove' : 'add';\n    itemBtn.addEventListener('click', onClickBtn);\n\n    const xmlns = 'http://www.w3.org/2000/svg';\n    const xlink = 'http://www.w3.org/1999/xlink';\n    const itemBtnImg = document.createElementNS(xmlns, 'svg');\n    const iconName = isInsert ? 'minus' : 'plus';\n    const itemBtnImgClass = `modal-window-favorites__item-btn-img--${iconName}`;\n    itemBtnImg.classList.add('modal-window-favorites__item-btn-img', itemBtnImgClass);\n    itemBtn.appendChild(itemBtnImg);\n\n    const itemBtnImgUse = document.createElementNS(xmlns, 'use');\n    itemBtnImgUse.setAttributeNS(xlink, 'href', `/resourse/images/shared-sprite-icons.svg#icon-${iconName}`);\n    itemBtnImg.appendChild(itemBtnImgUse);\n\n    itemBtn.appendChild(document.createTextNode(isInsert ? 'Видалити' : 'Додати'));\n    return itemBtn;\n  };\n\n  const createItem = responseItem => {\n    const item = document.createElement('li');\n    item.classList.add('modal-window-favorites__item');\n\n    const itemTitle = document.createElement('span');\n    itemTitle.classList.add('modal-window-favorites__item-title');\n    itemTitle.textContent = responseItem.name;\n    item.appendChild(itemTitle);\n    item.appendChild(createBtn(+responseItem.isInsert, responseItem.id));\n    return item;\n  };\n\n  let main;\n  let errorText;\n\n  try {\n    const url = '/index.php?route=api/getFavorites';\n    const body = JSON.stringify({ productId });\n\n    const response = await fetch(url, { method: 'POST', body });\n    if (response.ok) {\n      main = document.createElement('ul');\n      main.classList.add('modal-window-favorites__list');\n      const data = await response.json();\n\n      if (data.length) {\n        data.forEach(el => main.appendChild(createItem(el)));\n      } else {\n        main = document.createElement('div');\n        main.classList.add('modal-window__response', 'modal-window__response--success');\n        main.appendChild(document.createTextNode('Список обраного відсутній. '));\n        const erroLink = document.createElement('a');\n        erroLink.classList = 'modal-window-favorites__error-link';\n        erroLink.textContent = 'Додати';\n        erroLink.href = '/index.php?route=account#favorites';\n        main.appendChild(erroLink);\n        main.appendChild(document.createTextNode(' новий список'));\n      }\n    } else {\n      const responseText = await response.text();\n      if (response.status === 400 && responseText === 'INVALID') {\n        errorText = 'Помилка валідації';\n      } else {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n    }\n  } catch (err) {\n    errorText = `Помилка відправлення: ${err.message}`;\n  }\n\n  if (errorText) main = window.ModalWindow.createResponse(errorText, 'error');\n  new window.ModalWindow('Виберіть список обраного', main);\n};\n","window.modalWindowWishlist = async productId => {\n  let textResult;\n  let hasError = true;\n\n  try {\n    const url = '/index.php?route=api/wishlist';\n    const body = JSON.stringify({ productId });\n\n    const response = await fetch(url, { method: 'POST', body });\n    if (response.ok) {\n      textResult = 'Товар додано! Надішлемо email, при появі товара на складі!';\n      hasError = false;\n    } else {\n      const responseText = await response.text();\n      if (response.status === 400 && responseText === 'INVALID') {\n        textResult = 'Помилка валідації';\n      } else {\n        throw new Error(`${response.status} ${response.statusText}`);\n      }\n    }\n  } catch (err) {\n    textResult = `Помилка відправлення: ${err.message}`;\n  }\n\n  const main = window.ModalWindow.createResponse(textResult, hasError ? 'error' : 'success');\n  new window.ModalWindow('Повідомити про наявність', main);\n};\n","const setHeaderCartCounter = count => {\n  const headerCartCounter = document.getElementById('headerCartCounter');\n  if (!headerCartCounter) return;\n  if (count) {\n    headerCartCounter.textContent = count;\n    headerCartCounter.classList.remove('btn-header-action__counter--hidden');\n  } else {\n    headerCartCounter.classList.add('btn-header-action__counter--hidden');\n  }\n};\n\n// ===================================================================\n\nconst initCart = () => {\n  const cart = document.getElementById('cart');\n  if (!cart) return;\n  const onCartClose = () => document.body.classList.remove('body--cart-open');\n  cart.addEventListener('click', evt => evt.target === evt.currentTarget && onCartClose());\n\n  const cartClose = cart.querySelector('.cart__btn-close');\n  cartClose.addEventListener('click', onCartClose);\n\n  // ===================================================================\n\n  const cartContainer = cart.querySelector('.cart__container');\n  const cartWrapper = cart.querySelector('.cart__wrapper');\n\n  const setCartContainerHeight = height => cartContainer.style.setProperty('--height', height);\n  const onResizeCart = () => setCartContainerHeight(`${cartWrapper.scrollHeight}px`);\n  const onResizeCartThrottle = window.shared.throttle(onResizeCart, 500);\n\n  window.cartOpen = () => {\n    document.body.classList.toggle('body--cart-open');\n    if (document.body.classList.contains('body--cart-open')) {\n      onResizeCartThrottle();\n      window.addEventListener('resize', onResizeCartThrottle);\n    } else {\n      window.removeEventListener('resize', onResizeCartThrottle);\n    }\n  };\n\n  // ===================================================================\n\n  const cartClear = cart.querySelector('.cart__clear');\n  if (cartClear) {\n    const onClickCartClear = async evt => {\n      evt.target.disabled = true;\n\n      const url = '/index.php?route=shared/cart/clear';\n      try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\n        window.cartGet();\n      } catch (err) {\n        console.error(err.message);\n      }\n\n      setHeaderCartCounter(0);\n      onCartClose();\n      evt.target.disabled = false;\n    };\n\n    cartClear.addEventListener('click', onClickCartClear);\n  }\n\n  // ============================================================================\n\n  const cartTotalSumUAH = document.getElementById('cartTotalSumUAH');\n  const cartTotalSumUSD = document.getElementById('cartTotalSumUSD');\n\n  const onClickCartItemRemove = async evt => {\n    evt.target.disabled = true;\n    const item = evt.target.closest('.cart__item');\n    const body = JSON.stringify({ id: item.dataset.id });\n    const url = '/index.php?route=shared/cart/remove';\n\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        const responseJSON = await response.json();\n        setHeaderCartCounter(responseJSON.totalQuantity);\n        if (!responseJSON.totalQuantity) {\n          onCartClose();\n          window.cartGet();\n          return;\n        }\n        cartTotalSumUAH.textContent = responseJSON.totalUAH;\n        cartTotalSumUSD.textContent = responseJSON.totalUSD;\n        item.remove();\n        return;\n      }\n      throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  const cartItemRemoveList = cart.querySelectorAll('.cart__item-remove');\n  if (cartItemRemoveList) cartItemRemoveList.forEach(el => el.addEventListener('click', onClickCartItemRemove));\n\n  // ============================================================================\n\n  const cartItemQuantityBtnList = cart.querySelectorAll('.cart__item-quantity-btn');\n  if (cartItemQuantityBtnList) {\n    const onClickCartItemQuntityBtn = async ({ target }) => {\n      target.disabled = true;\n      const item = target.closest('.cart__item');\n      const btnMinus = item.querySelector('.cart__item-quantity-btn--minus');\n      const btnPlus = item.querySelector('.cart__item-quantity-btn--plus');\n      const isMinus = target.classList.contains('cart__item-quantity-btn--minus');\n\n      const quantity = isMinus ? -1 : 1;\n      const cartResponse = await window.cartAdd(item.dataset.id, quantity);\n\n      cartTotalSumUAH.textContent = cartResponse.totalUAH;\n      cartTotalSumUSD.textContent = cartResponse.totalUSD;\n      btnMinus.disabled = cartResponse.quantity === 1;\n      btnPlus.disabled = cartResponse.isMaxQuantity;\n      item.querySelector('.cart__item-quantity-input').value = cartResponse.quantity;\n    };\n\n    cartItemQuantityBtnList.forEach(el => el.addEventListener('click', onClickCartItemQuntityBtn));\n  }\n};\n\ninitCart();\n\n// ============================================================================\n\nwindow.cartGet = async () => {\n  const url = '/index.php?route=shared/cart/get';\n\n  try {\n    const response = await fetch(url);\n    const responseText = await response.text();\n    if (response.ok) {\n      document.getElementById('cart').remove();\n      document.body.insertAdjacentHTML('beforeend', responseText);\n      initCart();\n      return;\n    }\n    throw new Error(`${response.status} ${response.statusText}`);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\n// ============================================================================\n\nwindow.cartAdd = async (id, quantity = 1) => {\n  const url = '/index.php?route=shared/cart/add';\n  const body = JSON.stringify({ id, quantity });\n\n  let errorText;\n  try {\n    const response = await fetch(url, { method: 'POST', body });\n    if (response.ok) {\n      const responseJSON = await response.json();\n      setHeaderCartCounter(responseJSON.totalQuantity);\n      return responseJSON;\n    }\n\n    const responseText = await response.text();\n    if (response.status === 400 && responseText === 'MAX_QUANTITY') {\n      errorText = 'Недостатньо товарів на складі';\n    } else {\n      throw new Error(`${response.status} ${response.statusText}`);\n    }\n  } catch (err) {\n    errorText = err.message;\n  }\n\n  new window.ModalWindow('Помилка', document.createTextNode(errorText));\n  return false;\n};\n","window.cartToast = imageSrc => {\n  const main = document.createElement('div');\n\n  const close = () => {\n    main.classList.remove('cart-toast--open');\n    setTimeout(() => main.remove(), 500);\n  };\n\n  main.classList.add('cart-toast');\n\n  const image = document.createElement('img');\n  image.classList.add('cart-toast__image');\n  image.src = imageSrc;\n  main.appendChild(image);\n\n  const text = document.createElement('div');\n  text.classList.add('cart-toast__text');\n  main.appendChild(text);\n  text.appendChild(document.createTextNode('Товар додано до '));\n\n  const link = document.createElement('a');\n  link.classList.add('cart-toast__text-link');\n  link.href = '/index.php?route=checkout';\n  link.textContent = 'кошика';\n  text.appendChild(link);\n\n  main.appendChild(text);\n\n  const header = document.createElement('div');\n  header.classList.add('modal-window__header');\n  text.appendChild(header);\n\n  const btnClose = document.createElement('button');\n  btnClose.classList.add('cart-toast__btn-close');\n  btnClose.title = 'Закрити';\n  btnClose.addEventListener('click', close);\n  main.appendChild(btnClose);\n\n  const xmlns = 'http://www.w3.org/2000/svg';\n  const xlink = 'http://www.w3.org/1999/xlink';\n  const btnCloseImg = document.createElementNS(xmlns, 'svg');\n  btnCloseImg.classList.add('cart-toast__btn-close-icon');\n  btnClose.appendChild(btnCloseImg);\n\n  const btnCloseImgUse = document.createElementNS(xmlns, 'use');\n  btnCloseImgUse.setAttributeNS(xlink, 'href', '/resourse/images/shared-sprite-icons.svg#icon-close');\n  btnCloseImg.appendChild(btnCloseImgUse);\n\n  document.body.appendChild(main);\n\n  setTimeout(() => main.classList.add('cart-toast--open'), 10);\n  setTimeout(close, 2000);\n};\n"]}