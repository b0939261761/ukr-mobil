{"version":3,"sources":["new_post.js","checkout.js"],"names":[],"mappingsfile":"checkout.min.js","sourcesContent":["window.newPostInit = async (blockRegion, blockCity, blockWarehouse) => {\n  const newPost = (() => {\n    let cities = [];\n\n    const httpNovaPoshta = async (modelName, calledMethod, methodProperties = {}) => {\n      const body = JSON.stringify({\n        apiKey: '46319c903bb2cce0d0d25e6542bb5575',\n        modelName,\n        calledMethod,\n        methodProperties\n      });\n      const url = 'https://api.novaposhta.ua/v2.0/json/';\n      const response = await fetch(url, { method: 'POST', body });\n      const data = await response.json();\n      if (data && data.success) return data.data;\n      console.error('Нова Пошта', data.errors);\n      return [];\n    };\n\n    const getCities = async area => {\n      if (!cities.length) cities = await httpNovaPoshta('Address', 'getCities');\n      return cities.filter(el => el.Area === area);\n    };\n\n    return {\n      getRegions: () => httpNovaPoshta('Address', 'getAreas'),\n      getCities,\n      getWarehouses: ref => httpNovaPoshta('AddressGeneral', 'getWarehouses', { CityRef: ref })\n    };\n  })();\n\n  // ==========================================================================\n\n  const createItem = ({ Description, Ref }, selectedValue) => new Option(\n    Description, Ref, false, Ref === selectedValue\n  );\n\n  const region = blockRegion.querySelector('select');\n  const city = blockCity.querySelector('select');\n  const warehouse = blockWarehouse.querySelector('select');\n\n  // ==========================================================================\n\n  const setWarehouses = async value => {\n    warehouse.options.length = 1;\n    warehouse.selectedIndex = 0;\n\n    if (!value) return;\n    const warehouses = await newPost.getWarehouses(value);\n    warehouses.forEach(item => warehouse.append(createItem(item, warehouse.dataset.selectedValue)));\n  };\n\n  city.addEventListener('change', ({ target }) => setWarehouses(target.value));\n\n  // ==========================================================================\n\n  const setCities = async value => {\n    city.options.length = 1;\n    city.selectedIndex = 0;\n    warehouse.options.length = 1;\n    warehouse.selectedIndex = 0;\n\n    if (!value) return;\n    const cities = await newPost.getCities(value);\n    cities.forEach(item => city.append(createItem(item, city.dataset.selectedValue)));\n    setWarehouses(city.value);\n  };\n\n  region.addEventListener('change', ({ target }) => setCities(target.value));\n\n  // ==========================================================================\n\n  const regions = await newPost.getRegions();\n  regions.forEach(item => region.append(createItem(item, region.dataset.selectedValue)));\n  setCities(region.value);\n};\n","/* eslint-disable no-return-assign */\n\nconst setCheckoutInputInvalid = (elem, text) => {\n  if (text) elem.setCustomValidity(text);\n  elem.classList.add('checkout-text-input__input--invalid');\n};\n\nconst clearCheckoutInputInvalid = elem => {\n  elem.setCustomValidity('');\n  elem.classList.remove('checkout-text-input__input--invalid');\n};\n\nconst checkoutFirstName = document.getElementById('checkoutFirstName');\nconst checkoutLastName = document.getElementById('checkoutLastName');\nconst checkoutPhone = document.getElementById('checkoutPhone');\nconst checkoutEmail = document.getElementById('checkoutEmail');\n\nconst checkoutBlockRegion = document.getElementById('checkoutBlockRegion');\nconst checkoutBlockCity = document.getElementById('checkoutBlockCity');\nconst checkoutBlockWarehouse = document.getElementById('checkoutBlockWarehouse');\nconst checkoutBlockAddress = document.getElementById('checkoutBlockAddress');\nconst checkoutRegion = checkoutBlockRegion.querySelector('select');\nconst checkoutCity = checkoutBlockCity.querySelector('select');\nconst checkoutWarehouse = checkoutBlockWarehouse.querySelector('select');\nconst checkoutAddress = checkoutBlockAddress.querySelector('input');\n\nconst addInputValidation = el => {\n  el.addEventListener('invalid', () => setCheckoutInputInvalid(el));\n  el.addEventListener('input', () => clearCheckoutInputInvalid(el));\n};\n\n[checkoutFirstName, checkoutLastName, checkoutEmail, checkoutAddress].forEach(addInputValidation);\n\nconst setCheckoutSelectInvalid = elem => elem.classList.add('custom-select__select--invalid');\nconst clearCheckoutSelectInvalid = elem => elem.classList.remove('custom-select__select--invalid');\n\nconst addSelectValidation = el => {\n  el.addEventListener('invalid', () => setCheckoutSelectInvalid(el));\n  el.addEventListener('input', () => clearCheckoutSelectInvalid(el));\n};\n\n[checkoutRegion, checkoutCity, checkoutWarehouse].forEach(addSelectValidation);\n\n// ============================================================================\n\nconst phoneValue = checkoutPhone.value;\nconst checkoutPhoneMaskOptions = { mask: '+38(\\\\000)000-00-00', lazy: false };\nconst checkoutPhoneMask = IMask(checkoutPhone, checkoutPhoneMaskOptions);\ncheckoutPhoneMask.unmaskedValue = phoneValue;\n\nconst checkoutPhoneInvalidText = 'Неправильний номер телефону. Формат 38(0xx)xxx-xx-xx';\n\ncheckoutPhone.addEventListener('invalid', () => setCheckoutInputInvalid(checkoutPhone, checkoutPhoneInvalidText));\ncheckoutPhone.addEventListener('input', () => clearCheckoutInputInvalid(checkoutPhone));\n\n// ============================================================================\n\nwindow.newPostInit(checkoutBlockRegion, checkoutBlockCity, checkoutBlockWarehouse);\n\nconst checkoutPaymentDescriptionItemCashDelivery = document.getElementById('checkoutPaymentDescriptionItemCashDelivery');\n\nconst isCheckoutEmptyCart = () => !document.getElementById('checkoutCart');\nconst getCheckoutShippingMethod = () => document.querySelector('input[name=\"shipping-method\"]:checked').value;\nconst getCheckoutPaymentMethod = () => document.querySelector('input[name=\"payment-method\"]:checked').value;\n\n// ============================================================================\n\nconst setCheckoutToPayUAH = () => {\n  const checkoutCartTableTotalCommissionRow = document.getElementById('checkoutCartTableTotalCommissionRow');\n  const checkoutTotalUAH = document.getElementById('checkoutTotalUAH');\n  const checkoutCommissionUAH = document.getElementById('checkoutCommissionUAH');\n  const checkoutToPay = document.getElementById('checkoutToPay');\n\n  let toPay = +checkoutTotalUAH.textContent;\n  checkoutCartTableTotalCommissionRow.classList.add('checkout__cart-table-total-row-hide');\n\n  checkoutPaymentDescriptionItemCashDelivery.classList.add('checkout-payment-description-item--hidden');\n  if (getCheckoutPaymentMethod() === 'Наложений платіж') {\n    checkoutPaymentDescriptionItemCashDelivery.classList.remove('checkout-payment-description-item--hidden');\n    checkoutCartTableTotalCommissionRow.classList.remove('checkout__cart-table-total-row-hide');\n    toPay += +checkoutCommissionUAH.textContent;\n  }\n  checkoutToPay.textContent = toPay;\n};\n\nconst checkoutCartUpdate = data => {\n  if (isCheckoutEmptyCart()) return;\n\n  const checkoutNotification = document.getElementById('checkoutNotification');\n  const checkoutNotificationList = document.getElementById('checkoutNotificationList');\n  checkoutNotification.classList.add('checkout__notification--hide');\n  checkoutNotificationList.innerHTML = '';\n\n  const addWarning = (el, city) => {\n    el.classList.add('checkout-block-item--hide');\n    if (el.querySelector('input[name=\"shipping-method\"]:checked')) {\n      document.getElementById('checkoutShippingMethodNewPost').checked = true;\n    }\n\n    checkoutNotification.classList.remove('checkout__notification--hide');\n    const textWarning = document.createElement('span');\n    textWarning.textContent = `Самовивіз з м. ${city} недоступний через недостатню кількість товару на складі`;\n    checkoutNotificationList.appendChild(textWarning);\n  };\n\n  const checkoutItemShippingMethodStore1 = document.getElementById('checkoutItemShippingMethodStore1');\n  const checkoutItemShippingMethodStore2 = document.getElementById('checkoutItemShippingMethodStore2');\n  checkoutItemShippingMethodStore1.classList.remove('checkout-block-item--hide');\n  checkoutItemShippingMethodStore2.classList.remove('checkout-block-item--hide');\n  if (!+data.enoughQuantityStore1) addWarning(checkoutItemShippingMethodStore1, 'Рівне');\n  if (!+data.enoughQuantityStore2) addWarning(checkoutItemShippingMethodStore2, 'Чернівці');\n\n  // ==========================================================================\n\n  const checkoutQuantity = document.getElementById('checkoutQuantity');\n  const checkoutTotalUAH = document.getElementById('checkoutTotalUAH');\n  const checkoutTotalUSD = document.getElementById('checkoutTotalUSD');\n  const checkoutCommissionUAH = document.getElementById('checkoutCommissionUAH');\n\n  checkoutQuantity.textContent = data.totalQuantity;\n  checkoutTotalUAH.textContent = data.totalUAH;\n  checkoutTotalUSD.textContent = data.totalUSD;\n  checkoutCommissionUAH.textContent = data.commissionUAH;\n  setCheckoutToPayUAH();\n};\n\n// ============================================================================\n\nconst checkoutCartItemRemoveList = document.querySelectorAll('.checkout__cart-item-remove');\nif (checkoutCartItemRemoveList) {\n  const onClickCheckoutCartItemRemove = async evt => {\n    evt.target.disabled = true;\n    const item = evt.target.closest('.checkout__cart-item');\n    const body = JSON.stringify({ id: item.dataset.id });\n    const url = '/index.php?route=shared/cart/remove';\n\n    try {\n      const response = await fetch(url, { method: 'POST', body });\n      if (response.ok) {\n        const responseJSON = await response.json();\n        checkoutCartUpdate(responseJSON);\n\n        if (!+responseJSON.totalQuantity) {\n          document.getElementById('checkoutCart').remove();\n          const checkoutCartEmpty = document.createElement('div');\n          checkoutCartEmpty.classList.add('checkout__cart-empty');\n          checkoutCartEmpty.textContent = 'Ваш кошик пустий!';\n          document.getElementById('checkoutSectionCart').appendChild(checkoutCartEmpty);\n          return;\n        }\n\n        item.remove();\n        return;\n      }\n      throw new Error(`${response.status} ${response.statusText}`);\n    } catch (err) {\n      console.error(err.message);\n    }\n  };\n\n  checkoutCartItemRemoveList.forEach(el => el.addEventListener('click', onClickCheckoutCartItemRemove));\n}\n\n// ============================================================================\n\nconst checkoutCartItemQuantityBtnList = document.querySelectorAll('.checkout__cart-item-quantity-btn');\nif (checkoutCartItemQuantityBtnList) {\n  const onClickCheckoutCartItemQuntityBtn = async ({ target }) => {\n    target.disabled = true;\n    const item = target.closest('.checkout__cart-item');\n    const btnMinus = item.querySelector('.checkout__cart-item-quantity-btn--minus');\n    const btnPlus = item.querySelector('.checkout__cart-item-quantity-btn--plus');\n    const totalUAH = item.querySelector('.checkout__cart-item-price-uah-value');\n    const totalUSD = item.querySelector('.checkout__cart-item-price-usd-value');\n\n    const isMinus = target.classList.contains('checkout__cart-item-quantity-btn--minus');\n\n    const quantity = isMinus ? -1 : 1;\n    const response = await window.cartAdd(item.dataset.id, quantity);\n\n    totalUAH.textContent = response.productTotalUAH;\n    totalUSD.textContent = response.productTotalUSD;\n    checkoutCartUpdate(response);\n    btnMinus.disabled = response.quantity === 1;\n    btnPlus.disabled = response.isMaxQuantity;\n    item.querySelector('.checkout__cart-item-quantity-input').value = response.quantity;\n  };\n\n  checkoutCartItemQuantityBtnList.forEach(el => el.addEventListener('click', onClickCheckoutCartItemQuntityBtn));\n}\n\n// ============================================================================\n\nconst checkoutPaymentMethodList = document.querySelectorAll('[name=\"payment-method\"]');\ncheckoutPaymentMethodList.forEach(el => el.addEventListener('change', setCheckoutToPayUAH));\n\n// ============================================================================\n\nconst checkoutShippingDescriptionRivne = document.getElementById('checkoutShippingDescriptionRivne');\nconst checkoutShippingDescriptionChernivtsi = document.getElementById('checkoutShippingDescriptionChernivtsi');\nconst checkoutSectionPayment = document.getElementById('checkoutSectionPayment');\n\nconst onChangeShippingMethod = () => {\n  checkoutShippingDescriptionRivne.classList.add('checkout-shipping-description-car--hidden');\n  checkoutShippingDescriptionChernivtsi.classList.add('checkout-shipping-description-car--hidden');\n\n  checkoutBlockRegion.classList.add('custom-select--hidden');\n  checkoutBlockCity.classList.add('custom-select--hidden');\n  checkoutBlockWarehouse.classList.add('custom-select--hidden');\n  checkoutBlockAddress.classList.add('checkout-text-input--hidden');\n  checkoutRegion.required = false;\n  checkoutCity.required = false;\n  checkoutWarehouse.required = false;\n  checkoutAddress.required = false;\n\n  checkoutSectionPayment.classList.remove('checkout__section--hide');\n\n  switch (getCheckoutShippingMethod()) {\n    case 'Самовивіз з м. Рівне':\n      checkoutShippingDescriptionRivne.classList.remove('checkout-shipping-description-car--hidden');\n      checkoutSectionPayment.classList.add('checkout__section--hide');\n      break;\n    case 'Самовивіз з м. Чернівці':\n      checkoutShippingDescriptionRivne.classList.remove('checkout-shipping-description-car--hidden');\n      checkoutSectionPayment.classList.add('checkout__section--hide');\n      break;\n    case 'Кур\\'єрська доставка м. Рівне':\n      checkoutSectionPayment.classList.remove('checkout__section--hide');\n      checkoutBlockAddress.classList.remove('checkout-text-input--hidden');\n      checkoutAddress.required = true;\n      break;\n    case 'Кур\\'єрська доставка \"Нова пошта\"':\n      checkoutBlockRegion.classList.remove('custom-select--hidden');\n      checkoutBlockCity.classList.remove('custom-select--hidden');\n      checkoutBlockAddress.classList.remove('checkout-text-input--hidden');\n      checkoutRegion.required = false;\n      checkoutCity.required = false;\n      checkoutAddress.required = false;\n      break;\n    case 'Нова Пошта':\n      checkoutBlockRegion.classList.remove('custom-select--hidden');\n      checkoutBlockCity.classList.remove('custom-select--hidden');\n      checkoutBlockWarehouse.classList.remove('custom-select--hidden');\n      checkoutRegion.required = false;\n      checkoutCity.required = false;\n      checkoutWarehouse.required = false;\n      break;\n    default: break;\n  }\n};\n\nconst shippingMethodList = document.querySelectorAll('[name=\"shipping-method\"]');\nshippingMethodList.forEach(el => el.addEventListener('change', onChangeShippingMethod));\n\n// ============================================================================\n\nconst goToLiqpay = ({ data, signature }) => {\n  const form = document.createElement('form');\n  form.method = 'POST';\n  form.action = 'https://www.liqpay.ua/api/3/checkout';\n\n  const elData = document.createElement('input');\n  elData.type = 'hidden';\n  elData.name = 'data';\n  elData.value = data;\n  form.appendChild(elData);\n\n  const elSigature = document.createElement('input');\n  elSigature.type = 'hidden';\n  elSigature.name = 'signature';\n  elSigature.value = signature;\n  form.appendChild(elSigature);\n\n  document.body.appendChild(form);\n  form.submit();\n};\n\n// ============================================================================\n\nconst onSubmitCheckoutForm = async event => {\n  event.preventDefault();\n  let elemToScroll;\n  let modalWindow;\n\n  const bodyError = document.createElement('div');\n  bodyError.classList.add('checkout__modal-window-body');\n\n  const phone = checkoutPhoneMask.unmaskedValue;\n  const isValidPhone = phone.length === 9;\n  if (!isValidPhone) {\n    const textError = document.createElement('div');\n    textError.textContent = 'Неправильний телефон отримувача';\n    bodyError.appendChild(textError);\n    elemToScroll = checkoutPhone.closest('label');\n  }\n\n  const email = checkoutEmail.value.trim();\n  const isValidEmail = window.shared.checkEmail(email);\n  if (!isValidEmail) {\n    const textError = document.createElement('div');\n    textError.textContent = 'Неправильний email';\n    bodyError.appendChild(textError);\n    if (!elemToScroll) elemToScroll = checkoutEmail.closest('label');\n  }\n\n  const shippingMethod = getCheckoutShippingMethod();\n\n  let shippingAddress = '';\n  let regionId;\n  let cityId;\n  let warehouseId;\n\n  const regionText = checkoutRegion.options[checkoutRegion.selectedIndex].text;\n  const cityText = checkoutCity.options[checkoutCity.selectedIndex].text;\n  const warehouseText = checkoutWarehouse.options[checkoutWarehouse.selectedIndex].text;\n\n  let paymentMethod = '';\n  switch (shippingMethod) {\n    case 'Нова Пошта':\n      shippingAddress = `${regionText} - ${cityText} - ${warehouseText}`;\n      regionId = checkoutRegion.value;\n      cityId = checkoutCity.value;\n      warehouseId = checkoutWarehouse.value;\n      paymentMethod = getCheckoutPaymentMethod();\n      break;\n    case 'Кур\\'єрська доставка \"Нова пошта\"':\n      shippingAddress = `${regionText} - ${cityText} - ${checkoutAddress.value}`;\n      paymentMethod = getCheckoutPaymentMethod();\n      break;\n    case 'Кур\\'єрська доставка м. Рівне': shippingAddress = checkoutAddress.value; break;\n    default: break;\n  }\n\n  let comment = document.getElementById('checkoutComment').value;\n  if (document.getElementById('checkoutNotCallback').checked) comment = `Не перезванивать.\\n${comment}`;\n\n  const body = JSON.stringify({\n    firstName: checkoutFirstName.value,\n    lastName: checkoutLastName.value,\n    phone,\n    isValidPhone,\n    email,\n    isValidEmail,\n    shippingMethod,\n    shippingAddress,\n    paymentMethod,\n    comment,\n    region: regionId,\n    city: cityId,\n    warehouse: warehouseId\n  });\n\n  try {\n    const response = await fetch('/index.php?route=checkout/order', { method: 'POST', body });\n    const responseType = response.headers.get('Content-Type') === 'application/json' ? 'json' : 'text';\n    const responseData = await response[responseType]();\n\n    if (response.ok) {\n      if (isValidPhone && isValidEmail) {\n        if (paymentMethod === 'Оплата карткою онлайн (LiqPay)') return goToLiqpay(responseData);\n        return window.location = responseData;\n      }\n    } else if (response.status === 400 && responseData === 'NOT_ENOUGH_QUANTITY') {\n      const textError = document.createElement('div');\n      textError.textContent = 'Товар на складе відсутній';\n      bodyError.appendChild(textError);\n      setTimeout(() => window.location = '/', 3000);\n    } else if (response.status === 400 && responseData === 'USER_EXISTS') {\n      const textError = document.createElement('div');\n      textError.textContent = 'Користувач з данним email зареєстрований на сайті!';\n      bodyError.appendChild(textError);\n\n      const wrapperBtn = document.createElement('div');\n      wrapperBtn.classList.add('checkout__modal-window-wrapper-btn');\n      bodyError.appendChild(wrapperBtn);\n\n      const formBtn = window.ModalWindow.createFormBtn('Ввійти в аккаунт');\n      wrapperBtn.appendChild(formBtn);\n      formBtn.addEventListener('click', () => {\n        modalWindow.close();\n        window.modalWindowLogin();\n      });\n    } else {\n      throw new Error(`${response.status} ${response.statusText}`);\n    }\n  } catch (err) {\n    const textError = document.createElement('div');\n    textError.textContent = `Помилка відправлення: ${err.message}`;\n    bodyError.appendChild(textError);\n  }\n\n  if (elemToScroll) elemToScroll.scrollIntoView({ behavior: 'smooth' });\n  modalWindow = new window.ModalWindow('Помилка', bodyError);\n};\n\nconst checkoutForm = document.getElementById('checkoutForm');\ncheckoutForm.addEventListener('submit', onSubmitCheckoutForm);\n"]}