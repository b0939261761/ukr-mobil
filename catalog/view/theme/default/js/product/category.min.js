const checkPropertyColor = name => name.toLowerCase() === 'цвет'

const appendProductOwner = (product, parentNode) => {
  const { href, productProperties, price_min, price_max } = product;

  const productItem = document.createElement('div');
  productItem.classList.add('product-item');

  const productItemPreview = document.createElement('a');
  productItemPreview.classList.add('product-item__preview');
  productItemPreview.href = href;

  const productItemPreviewImage = document.createElement('img');
  productItemPreviewImage.classList.add('product-item__preview-image');
  productItemPreviewImage.src = product.image;
  productItemPreview.append(productItemPreviewImage);

const checkPropertyColor = name => name.toLowerCase() === 'цвет'
  const previewColors = productProperties.find(({ name }) => checkPropertyColor(name));
  if (previewColors) {
    const productItemPreviewColors = document.createElement('div');
    productItemPreviewColors.classList.add('product-item__preview-colors');

    previewColors.values.forEach(value => {
      const productItemPreviewColor = document.createElement('div');
      productItemPreviewColor.classList.add('product-item__preview-color');
      productItemPreviewColor.style.backgroundColor = value.color;
      productItemPreviewColors.append(productItemPreviewColor);

    })

    productItemPreview.append(productItemPreviewColors);
  }

  productItem.append(productItemPreview);

  const productItemDescription = document.createElement('div');
  productItemDescription.classList.add('product-item__description');

  const productItemWrapperCode = document.createElement('div');
  productItemWrapperCode.classList.add('product-item__wrapper-code');
  productItemWrapperCode.append(document.createTextNode('Код: '));

  const productItemCode = document.createElement('span');
  productItemCode.classList.add('product-item__code');
  productItemCode.append(document.createTextNode(product.product_id));
  productItemWrapperCode.append(productItemCode);

  productItemDescription.append(productItemWrapperCode);

  const productItemName = document.createElement('a');
  productItemName.classList.add('product-item__name');
  productItemName.href = href;
  productItemName.append(document.createTextNode(product.name));
  productItemDescription.append(productItemName);

  if (productProperties) {
    const productItemWrapperProperties = document.createElement('a');
    productItemWrapperProperties.classList.add('product-item__wrapper-properties');
    productItemWrapperProperties.href = href;

    productProperties.forEach(property => {
      const isPropertyColor = checkPropertyColor(property.name);
      const productItemProperty = document.createElement('div');
      productItemProperty.classList.add('product-item__property');
      if (isPropertyColor) productItemProperty.classList.add('product-item__property--color');

      const productItemPropertyName = document.createElement('div');
      productItemPropertyName.classList.add('product-item__property-name');
      productItemPropertyName.append(document.createTextNode(property.name));
      productItemProperty.append(productItemPropertyName);

      const productItemPropertyValues = document.createElement('div');
      productItemPropertyValues.classList.add('product-item__property-values');

      property.values.forEach(value => {
        const productItemPropertyValue = document.createElement('div');
        productItemPropertyValue.classList.add('product-item__property-value');
        if (isPropertyColor) productItemPropertyValue.classList.add('product-item__property-value--color');
        productItemPropertyValue.style.setProperty('--color-property', value.color);
        productItemPropertyValue.append(document.createTextNode(value.name));
        productItemPropertyValues.append(productItemPropertyValue);
      })

      productItemProperty.append(productItemPropertyValues);
      productItemWrapperProperties.append(productItemProperty);
    });


    productItemDescription.append(productItemWrapperProperties);
  }

  const productItemPrice = document.createElement('div');
  productItemPrice.classList.add('product-item__price');

  if (price_min === price_max) {
    productItemPrice.append(document.createTextNode(price_min));
  } else {
    const productItemPriceTextFrom = document.createElement('span');
    productItemPriceTextFrom.classList.add('product-item__price-text');
    productItemPriceTextFrom.append(document.createTextNode('От '));
    productItemPrice.append(productItemPriceTextFrom);

    const productItemPriceMin = document.createElement('span');
    productItemPriceMin.classList.add('product-item__price-min');
    productItemPriceMin.append(document.createTextNode(price_min));
    productItemPrice.append(productItemPriceMin);

    const productItemPriceTextTo = document.createElement('span');
    productItemPriceTextTo.classList.add('product-item__price-text');
    productItemPriceTextTo.append(document.createTextNode(' до '));
    productItemPrice.append(productItemPriceTextTo);

    const productItemPriceMax = document.createElement('span');
    productItemPriceMax.classList.add('product-item__price-max');
    productItemPriceMax.append(document.createTextNode(price_max));
    productItemPrice.append(productItemPriceMax);
  }

  productItemDescription.append(productItemPrice);
  productItem.append(productItemDescription);

  if (+product.quantity) {
    const productItemAvailability = document.createElement('div');
    productItemAvailability.classList.add('product-item__availability');
    productItemAvailability.append(document.createTextNode('Есть в наличии!'));
    productItem.append(productItemAvailability);
  }

  const productItemBuy = document.createElement('div');
  productItemBuy.classList.add('product-item__buy');

  const productItemButton = document.createElement('a');
  productItemButton.classList.add('btn-new', 'btn-new--success');
  productItemButton.href = href;

  const productItemButtonWrapperIcon = document.createElement('span');
  productItemButtonWrapperIcon.classList.add('btn-new__wrapper-icon');
  productItemButtonWrapperIcon.innerHTML = `
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 576 512">
      <path d="M528.12 301.319l47.273-208C578.806 78.301 567.391 64 551.99 64H159.208l-9.166-44.81C147.758 8.021 137.93 0 126.529 0H24C10.745 0 0 10.745 0 24v16c0 13.255 10.745 24 24 24h69.883l70.248 343.435C147.325 417.1 136 435.222 136 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-15.674-6.447-29.835-16.824-40h209.647C430.447 426.165 424 440.326 424 456c0 30.928 25.072 56 56 56s56-25.072 56-56c0-22.172-12.888-41.332-31.579-50.405l5.517-24.276c3.413-15.018-8.002-29.319-23.403-29.319H218.117l-6.545-32h293.145c11.206 0 20.92-7.754 23.403-18.681z"/>
    </svg>
  `;
  productItemButton.append(productItemButtonWrapperIcon);

  const productItemButtonWrapperText = document.createElement('span');
  productItemButtonWrapperText.classList.add('btn-new__wrapper-text');
  productItemButtonWrapperText.append(document.createTextNode('В заказ'));
  productItemButton.append(productItemButtonWrapperText);

  productItemBuy.append(productItemButton);
  productItem.append(productItemBuy);
  parentNode.append(productItem);
}

window.addEventListener('load', () => {
  $('[data-toggle=\'tooltip\']').tooltip({container: 'body'});

  const params = new URLSearchParams(window.location.search);
  let page = +params.get('page') || 1;
  if (page < 1) page = 1;
  const loadMoreBtn = document.querySelector('.load-more-container__button');
  if (loadMoreBtn) loadMoreBtn.addEventListener('click', () => getList(++page));

  const productWrapper = document.querySelector('.product-wrapper');
  var eProductWrapper = $('.product-wrapper');
  var eProductItemTpl = $('#product-item-tpl');

  const renderList = (list, pagination, isNotLastPage) => {
    if (!isNotLastPage) loadMoreBtn.style.display = 'none';

    list.forEach(function (product) {
      if (+product.is_owner) {
        appendProductOwner(product, productWrapper);
      } else {
        var eClone = eProductItemTpl.clone();
        eClone.find('.preview a')
          .attr('href', product.href)
          .css('backgroundImage', 'url(' + product.image + ')');
        eClone.find('.top .code span').text(product.product_id);
        eClone.find('.top .name')
          .attr('href', product.href)
          .text(product.name);
        if (parseFloat(product.special) > 0) {
          eClone.find('.top .prices .main .default .new').text(product.special);
          eClone.find('.top .prices .main .default .old').text(product.price);
        } else {
          eClone.find('.top .prices .main .default').text(product.price);
        }
        product.quantity = parseInt(product.quantity);

        if (!(product.quantity > 0 && product.quantity <= 2)) {
          eClone.find('.product-ends').remove();
        }

        if (product.quantity <= 0 && !product.is_wishlist) {
          eClone.find('.button-cart').remove();
          eClone.find('.to-wishlist').attr('data-product-id', product.product_id);
        } else {
          eClone.find('.to-wishlist').remove();
        }

        eClone.find('.top .stocks').append(`
          <div class="s-item">
            <div class="name">г. Черновцы</div>
            <div class="quantity">${product.quantity_store_1} шт.</div>
          </div>
          <div class="s-item">
            <div class="name">г. Ровно</div>
            <div class="quantity">${product.quantity_store_2} шт.</div>
          </div>
        `);

        eClone.find('.top .buy-container .buy').attr('data-product-id', product.product_id);
        eClone.find('.top .buy-container .quantity').attr('value', parseInt(product.minimum));

        eProductWrapper.append(eClone.html());
      }
    });
    $('.pagination-container').html(pagination);
  }

  initOrderProduct();

  const getList = async page => {
    const animLoadDots = document.querySelector('.anim-load-dots');
    animLoadDots.classList.remove('hide');

    const url = '/index.php?route=product/category/apiGetList';
    const body = JSON.stringify({ ...queryUrl, page });

    try {
      const response = await fetch(url, { method: 'POST', body });
      if (response.ok) {
       const { products, pagination, isNotLastPage } = await response.json();
       renderList(products, pagination, isNotLastPage);
      } else {
       console.error(`Ошибка HTTP: ${response.status}`);
      }
    } catch (err) {
      console.error(`Ошибка: ${err.message}`);
    };

    animLoadDots.classList.add('hide');
  }

  /**
   * Init order product
   */
  function initOrderProduct() {
    $('body').on('click', '.button-cart', function (e) {
      var eButton = $(e.target).closest('.button-cart');
      var eQuantity = eButton.parent().find('.quantity');
      var productId = parseInt(eButton.attr('data-product-id'));

      if (!(productId > 0)) return console.log('Invalid Product ID');

      $.ajax({
        url: '/index.php?route=checkout/cart/add',
        type: 'post',
        data: {
          product_id: productId,
          quantity: eQuantity.val()
        },
        dataType: 'json',
        beforeSend: function () {
          eButton.button('loading');
        },
        complete: function () {
          eButton.button('reset');
        },
        success: function (json) {
          $('.alert-dismissible, .text-danger').remove();
          $('.form-group').removeClass('has-error');

          if (json['error']) {

            $.notifyClose();
            $.notify({
              message: json['error'],
              target: '_blank'
            }, {
              element: 'body',
              position: null,
              type: "info",
              allow_dismiss: true,
              newest_on_top: true,
              placement: {
                from: "top",
                align: "center"
              },
              offset: 0,
              spacing: 10,
              z_index: 2031,
              delay: 5000,
              timer: 1000,
              url_target: '_blank',
              mouse_over: null,
              animate: {
                enter: 'animated fadeInDown',
                exit: 'animated fadeOutUp'
              },
              onShow: null,
              onShown: null,
              onClose: null,
              onClosed: null,
              icon_type: 'class',
              template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-error" role="alert">' +
                '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">&nbsp;&times;</button>' +
                '<span data-notify="message"><i class="fa fa-check-circle"></i>&nbsp; {2}</span>' +
                '<div class="progress" data-notify="progressbar">' +
                '<div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' +
                '</div>' +
                '<a href="{3}" target="{4}" data-notify="url"></a>' +
                '</div>'
            });

            $('#cart > button').html('<i class="fa fa-shopping-cart"></i><span id="cart-total"> ' + json['total'] + '</span>');
            $('#cart > ul').load('index.php?route=common/cart/info ul li');
          }

          if (json['success']) {
            $.notifyClose();
            $.notify({
              message: json['success'],
              target: '_blank'
            }, {
              element: 'body',
              position: null,
              type: "info",
              allow_dismiss: true,
              newest_on_top: true,
              placement: {
                from: "top",
                align: "center"
              },
              offset: 0,
              spacing: 10,
              z_index: 2031,
              delay: 5000,
              timer: 1000,
              url_target: '_blank',
              mouse_over: null,
              animate: {
                enter: 'animated fadeInDown',
                exit: 'animated fadeOutUp'
              },
              onShow: null,
              onShown: null,
              onClose: null,
              onClosed: null,
              icon_type: 'class',
              template: '<div data-notify="container" class="col-xs-11 col-sm-3 alert alert-success" role="alert">' +
                '<button type="button" aria-hidden="true" class="close" data-notify="dismiss">&nbsp;&times;</button>' +
                '<span data-notify="message"><i class="fa fa-check-circle"></i>&nbsp; {2}</span>' +
                '<div class="progress" data-notify="progressbar">' +
                '<div class="progress-bar progress-bar-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div>' +
                '</div>' +
                '<a href="{3}" target="{4}" data-notify="url"></a>' +
                '</div>'
            });

            $('#cart > button').html('<i class="fa fa-shopping-cart"></i><span id="cart-total"> ' + json['total'] + '</span>');
            $('#cart > ul').load('index.php?route=common/cart/info ul li');
          }
        },
        error: function (xhr, ajaxOptions, thrownError) {
          alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
        }
      });
    });
  }

  $(".treeview-list").treeview({
    animated: "slow",
    collapsed: true,
    unique: true
  });

  $('.treeview-list a.active').parent().removeClass('expandable');
  $('.treeview-list a.active').parent().addClass('collapsable');
  $('.treeview-list .collapsable ul').css('display', 'block');
});
