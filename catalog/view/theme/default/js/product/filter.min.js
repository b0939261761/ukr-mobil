const filterBrand = document.getElementById('filter-brand');
const filterModel = document.getElementById('filter-model');

const getModels = async body => {
  const url = '/index.php?route=product/filter/models';
  const options = { method: 'POST', body: JSON.stringify(body) };

  try {
    const response = await fetch(url, options);
    if (response.ok) return await response.json();
    else console.error(`Ошибка HTTP: ${response.status}`);
  } catch (err) {
    console.error(`Ошибка: ${err.message}`);
  };
};

const changeModels = async brandValue => {
  filterModel.querySelectorAll('option:not(:first-child)').forEach(el => el.remove());
  const brand = +brandValue;
  if (!brand) return;
  const body = {
    brand,
    category: queryUrl.category,
    search: queryUrl.search
  };

  const models = await getModels(body);
  models.forEach(model => filterModel.options.add(new Option(model.name, model.id)));
}

filterBrand.addEventListener('change', event => changeModels(event.target.value));

const filterList = document.querySelectorAll('.product-filter .filter');

const filterSearchOnClick = () => {
  const url = new URL(`${window.location.protocol}//${window.location.hostname}/index.php`);
  if (queryUrl.route) url.searchParams.set('route', queryUrl.route);
  if (queryUrl.path) url.searchParams.set('path', queryUrl.path);
  if (queryUrl.search) url.searchParams.set('search', queryUrl.search);
  filterList.forEach(el => el.value && url.searchParams.set(el.id.slice(7), el.value));
  if (filterAvailable.checked) url.searchParams.set('available', 1);
  window.location = url.toString();
}

document.getElementById('filterSearch').addEventListener('click', filterSearchOnClick);
